// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

#ifndef PROTOBUF_Messages_2eproto__INCLUDED
#define PROTOBUF_Messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Messages {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Messages_2eproto();
void protobuf_AssignDesc_Messages_2eproto();
void protobuf_ShutdownFile_Messages_2eproto();

class SecretMessage;
class InitialMessage;
class MessageMSG0;
class MessageMSG1;
class MessageMSG2;
class MessageMSG3;
class AttestationMessage;
class RegisterMessage;
class PinCodeToMessage;
class PinCodeBackMessage;
class ResponseMessage;
class SMSMessage;
class SMSResponseMessage;
class AllInOneMessage;

enum Type {
  RA_MSG0 = 0,
  RA_MSG1 = 1,
  RA_MSG2 = 2,
  RA_MSG3 = 3,
  RA_ATT_RESULT = 4,
  RA_VERIFICATION = 5,
  RA_APP_ATT_OK = 6,
  PHONE_REG = 7,
  PIN_CODE_TO = 8,
  PIN_CODE_BACK = 9,
  PHONE_REG_END = 10,
  SESSION_CLOSE = 11,
  SMS_SEND = 12,
  SMS_RES = 13
};
bool Type_IsValid(int value);
const Type Type_MIN = RA_MSG0;
const Type Type_MAX = SMS_RES;
const int Type_ARRAYSIZE = Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Type_descriptor();
inline const ::std::string& Type_Name(Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Type_descriptor(), value);
}
inline bool Type_Parse(
    const ::std::string& name, Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type>(
    Type_descriptor(), name, value);
}
// ===================================================================

class SecretMessage : public ::google::protobuf::Message {
 public:
  SecretMessage();
  virtual ~SecretMessage();

  SecretMessage(const SecretMessage& from);

  inline SecretMessage& operator=(const SecretMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SecretMessage& default_instance();

  void Swap(SecretMessage* other);

  // implements Message ----------------------------------------------

  SecretMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SecretMessage& from);
  void MergeFrom(const SecretMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // optional uint32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.SecretMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static SecretMessage* default_instance_;
};
// -------------------------------------------------------------------

class InitialMessage : public ::google::protobuf::Message {
 public:
  InitialMessage();
  virtual ~InitialMessage();

  InitialMessage(const InitialMessage& from);

  inline InitialMessage& operator=(const InitialMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitialMessage& default_instance();

  void Swap(InitialMessage* other);

  // implements Message ----------------------------------------------

  InitialMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const InitialMessage& from);
  void MergeFrom(const InitialMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // optional uint32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.InitialMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static InitialMessage* default_instance_;
};
// -------------------------------------------------------------------

class MessageMSG0 : public ::google::protobuf::Message {
 public:
  MessageMSG0();
  virtual ~MessageMSG0();

  MessageMSG0(const MessageMSG0& from);

  inline MessageMSG0& operator=(const MessageMSG0& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageMSG0& default_instance();

  void Swap(MessageMSG0* other);

  // implements Message ----------------------------------------------

  MessageMSG0* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageMSG0& from);
  void MergeFrom(const MessageMSG0& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // required uint32 epid = 2;
  inline bool has_epid() const;
  inline void clear_epid();
  static const int kEpidFieldNumber = 2;
  inline ::google::protobuf::uint32 epid() const;
  inline void set_epid(::google::protobuf::uint32 value);

  // optional uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.MessageMSG0)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_epid();
  inline void clear_has_epid();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 epid_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static MessageMSG0* default_instance_;
};
// -------------------------------------------------------------------

class MessageMSG1 : public ::google::protobuf::Message {
 public:
  MessageMSG1();
  virtual ~MessageMSG1();

  MessageMSG1(const MessageMSG1& from);

  inline MessageMSG1& operator=(const MessageMSG1& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageMSG1& default_instance();

  void Swap(MessageMSG1* other);

  // implements Message ----------------------------------------------

  MessageMSG1* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageMSG1& from);
  void MergeFrom(const MessageMSG1& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // repeated uint32 GaX = 2 [packed = true];
  inline int gax_size() const;
  inline void clear_gax();
  static const int kGaXFieldNumber = 2;
  inline ::google::protobuf::uint32 gax(int index) const;
  inline void set_gax(int index, ::google::protobuf::uint32 value);
  inline void add_gax(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gax() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gax();

  // repeated uint32 GaY = 3 [packed = true];
  inline int gay_size() const;
  inline void clear_gay();
  static const int kGaYFieldNumber = 3;
  inline ::google::protobuf::uint32 gay(int index) const;
  inline void set_gay(int index, ::google::protobuf::uint32 value);
  inline void add_gay(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gay() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gay();

  // repeated uint32 GID = 4 [packed = true];
  inline int gid_size() const;
  inline void clear_gid();
  static const int kGIDFieldNumber = 4;
  inline ::google::protobuf::uint32 gid(int index) const;
  inline void set_gid(int index, ::google::protobuf::uint32 value);
  inline void add_gid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gid();

  // required uint32 status = 5;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.MessageMSG1)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gax_;
  mutable int _gax_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gay_;
  mutable int _gay_cached_byte_size_;
  int type_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gid_;
  mutable int _gid_cached_byte_size_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static MessageMSG1* default_instance_;
};
// -------------------------------------------------------------------

class MessageMSG2 : public ::google::protobuf::Message {
 public:
  MessageMSG2();
  virtual ~MessageMSG2();

  MessageMSG2(const MessageMSG2& from);

  inline MessageMSG2& operator=(const MessageMSG2& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageMSG2& default_instance();

  void Swap(MessageMSG2* other);

  // implements Message ----------------------------------------------

  MessageMSG2* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageMSG2& from);
  void MergeFrom(const MessageMSG2& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // optional uint32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // repeated uint32 publicKeyGx = 3 [packed = true];
  inline int publickeygx_size() const;
  inline void clear_publickeygx();
  static const int kPublicKeyGxFieldNumber = 3;
  inline ::google::protobuf::uint32 publickeygx(int index) const;
  inline void set_publickeygx(int index, ::google::protobuf::uint32 value);
  inline void add_publickeygx(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      publickeygx() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_publickeygx();

  // repeated uint32 publicKeyGy = 4 [packed = true];
  inline int publickeygy_size() const;
  inline void clear_publickeygy();
  static const int kPublicKeyGyFieldNumber = 4;
  inline ::google::protobuf::uint32 publickeygy(int index) const;
  inline void set_publickeygy(int index, ::google::protobuf::uint32 value);
  inline void add_publickeygy(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      publickeygy() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_publickeygy();

  // optional uint32 quoteType = 5;
  inline bool has_quotetype() const;
  inline void clear_quotetype();
  static const int kQuoteTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 quotetype() const;
  inline void set_quotetype(::google::protobuf::uint32 value);

  // repeated uint32 spid = 6 [packed = true];
  inline int spid_size() const;
  inline void clear_spid();
  static const int kSpidFieldNumber = 6;
  inline ::google::protobuf::uint32 spid(int index) const;
  inline void set_spid(int index, ::google::protobuf::uint32 value);
  inline void add_spid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      spid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_spid();

  // optional uint32 cmacKdfId = 7;
  inline bool has_cmackdfid() const;
  inline void clear_cmackdfid();
  static const int kCmacKdfIdFieldNumber = 7;
  inline ::google::protobuf::uint32 cmackdfid() const;
  inline void set_cmackdfid(::google::protobuf::uint32 value);

  // repeated uint32 signatureX = 8 [packed = true];
  inline int signaturex_size() const;
  inline void clear_signaturex();
  static const int kSignatureXFieldNumber = 8;
  inline ::google::protobuf::uint32 signaturex(int index) const;
  inline void set_signaturex(int index, ::google::protobuf::uint32 value);
  inline void add_signaturex(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      signaturex() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_signaturex();

  // repeated uint32 signatureY = 9 [packed = true];
  inline int signaturey_size() const;
  inline void clear_signaturey();
  static const int kSignatureYFieldNumber = 9;
  inline ::google::protobuf::uint32 signaturey(int index) const;
  inline void set_signaturey(int index, ::google::protobuf::uint32 value);
  inline void add_signaturey(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      signaturey() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_signaturey();

  // repeated uint32 smac = 10 [packed = true];
  inline int smac_size() const;
  inline void clear_smac();
  static const int kSmacFieldNumber = 10;
  inline ::google::protobuf::uint32 smac(int index) const;
  inline void set_smac(int index, ::google::protobuf::uint32 value);
  inline void add_smac(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      smac() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_smac();

  // optional uint32 sizeSigrl = 11;
  inline bool has_sizesigrl() const;
  inline void clear_sizesigrl();
  static const int kSizeSigrlFieldNumber = 11;
  inline ::google::protobuf::uint32 sizesigrl() const;
  inline void set_sizesigrl(::google::protobuf::uint32 value);

  // repeated uint32 sigrl = 12 [packed = true];
  inline int sigrl_size() const;
  inline void clear_sigrl();
  static const int kSigrlFieldNumber = 12;
  inline ::google::protobuf::uint32 sigrl(int index) const;
  inline void set_sigrl(int index, ::google::protobuf::uint32 value);
  inline void add_sigrl(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sigrl() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sigrl();

  // @@protoc_insertion_point(class_scope:Messages.MessageMSG2)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_quotetype();
  inline void clear_has_quotetype();
  inline void set_has_cmackdfid();
  inline void clear_has_cmackdfid();
  inline void set_has_sizesigrl();
  inline void clear_has_sizesigrl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > publickeygx_;
  mutable int _publickeygx_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > publickeygy_;
  mutable int _publickeygy_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > spid_;
  mutable int _spid_cached_byte_size_;
  ::google::protobuf::uint32 quotetype_;
  ::google::protobuf::uint32 cmackdfid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > signaturex_;
  mutable int _signaturex_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > signaturey_;
  mutable int _signaturey_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > smac_;
  mutable int _smac_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sigrl_;
  mutable int _sigrl_cached_byte_size_;
  ::google::protobuf::uint32 sizesigrl_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static MessageMSG2* default_instance_;
};
// -------------------------------------------------------------------

class MessageMSG3 : public ::google::protobuf::Message {
 public:
  MessageMSG3();
  virtual ~MessageMSG3();

  MessageMSG3(const MessageMSG3& from);

  inline MessageMSG3& operator=(const MessageMSG3& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageMSG3& default_instance();

  void Swap(MessageMSG3* other);

  // implements Message ----------------------------------------------

  MessageMSG3* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageMSG3& from);
  void MergeFrom(const MessageMSG3& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // optional uint32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // repeated uint32 sgxMac = 3 [packed = true];
  inline int sgxmac_size() const;
  inline void clear_sgxmac();
  static const int kSgxMacFieldNumber = 3;
  inline ::google::protobuf::uint32 sgxmac(int index) const;
  inline void set_sgxmac(int index, ::google::protobuf::uint32 value);
  inline void add_sgxmac(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sgxmac() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sgxmac();

  // repeated uint32 gaxMsg3 = 4 [packed = true];
  inline int gaxmsg3_size() const;
  inline void clear_gaxmsg3();
  static const int kGaxMsg3FieldNumber = 4;
  inline ::google::protobuf::uint32 gaxmsg3(int index) const;
  inline void set_gaxmsg3(int index, ::google::protobuf::uint32 value);
  inline void add_gaxmsg3(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gaxmsg3() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gaxmsg3();

  // repeated uint32 gayMsg3 = 5 [packed = true];
  inline int gaymsg3_size() const;
  inline void clear_gaymsg3();
  static const int kGayMsg3FieldNumber = 5;
  inline ::google::protobuf::uint32 gaymsg3(int index) const;
  inline void set_gaymsg3(int index, ::google::protobuf::uint32 value);
  inline void add_gaymsg3(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      gaymsg3() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_gaymsg3();

  // repeated uint32 secProperty = 6 [packed = true];
  inline int secproperty_size() const;
  inline void clear_secproperty();
  static const int kSecPropertyFieldNumber = 6;
  inline ::google::protobuf::uint32 secproperty(int index) const;
  inline void set_secproperty(int index, ::google::protobuf::uint32 value);
  inline void add_secproperty(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      secproperty() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_secproperty();

  // repeated uint32 quote = 7 [packed = true];
  inline int quote_size() const;
  inline void clear_quote();
  static const int kQuoteFieldNumber = 7;
  inline ::google::protobuf::uint32 quote(int index) const;
  inline void set_quote(int index, ::google::protobuf::uint32 value);
  inline void add_quote(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      quote() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_quote();

  // required uint32 status = 8;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 8;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.MessageMSG3)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sgxmac_;
  mutable int _sgxmac_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gaxmsg3_;
  mutable int _gaxmsg3_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > gaymsg3_;
  mutable int _gaymsg3_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > secproperty_;
  mutable int _secproperty_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > quote_;
  mutable int _quote_cached_byte_size_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static MessageMSG3* default_instance_;
};
// -------------------------------------------------------------------

class AttestationMessage : public ::google::protobuf::Message {
 public:
  AttestationMessage();
  virtual ~AttestationMessage();

  AttestationMessage(const AttestationMessage& from);

  inline AttestationMessage& operator=(const AttestationMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttestationMessage& default_instance();

  void Swap(AttestationMessage* other);

  // implements Message ----------------------------------------------

  AttestationMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttestationMessage& from);
  void MergeFrom(const AttestationMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // required uint32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // optional uint32 epidGroupStatus = 3;
  inline bool has_epidgroupstatus() const;
  inline void clear_epidgroupstatus();
  static const int kEpidGroupStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 epidgroupstatus() const;
  inline void set_epidgroupstatus(::google::protobuf::uint32 value);

  // optional uint32 tcbEvaluationStatus = 4;
  inline bool has_tcbevaluationstatus() const;
  inline void clear_tcbevaluationstatus();
  static const int kTcbEvaluationStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 tcbevaluationstatus() const;
  inline void set_tcbevaluationstatus(::google::protobuf::uint32 value);

  // optional uint32 pseEvaluationStatus = 5;
  inline bool has_pseevaluationstatus() const;
  inline void clear_pseevaluationstatus();
  static const int kPseEvaluationStatusFieldNumber = 5;
  inline ::google::protobuf::uint32 pseevaluationstatus() const;
  inline void set_pseevaluationstatus(::google::protobuf::uint32 value);

  // repeated uint32 latestEquivalentTcbPsvn = 6 [packed = true];
  inline int latestequivalenttcbpsvn_size() const;
  inline void clear_latestequivalenttcbpsvn();
  static const int kLatestEquivalentTcbPsvnFieldNumber = 6;
  inline ::google::protobuf::uint32 latestequivalenttcbpsvn(int index) const;
  inline void set_latestequivalenttcbpsvn(int index, ::google::protobuf::uint32 value);
  inline void add_latestequivalenttcbpsvn(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      latestequivalenttcbpsvn() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_latestequivalenttcbpsvn();

  // repeated uint32 latestPseIsvsvn = 7 [packed = true];
  inline int latestpseisvsvn_size() const;
  inline void clear_latestpseisvsvn();
  static const int kLatestPseIsvsvnFieldNumber = 7;
  inline ::google::protobuf::uint32 latestpseisvsvn(int index) const;
  inline void set_latestpseisvsvn(int index, ::google::protobuf::uint32 value);
  inline void add_latestpseisvsvn(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      latestpseisvsvn() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_latestpseisvsvn();

  // repeated uint32 latestPsdaSvn = 8 [packed = true];
  inline int latestpsdasvn_size() const;
  inline void clear_latestpsdasvn();
  static const int kLatestPsdaSvnFieldNumber = 8;
  inline ::google::protobuf::uint32 latestpsdasvn(int index) const;
  inline void set_latestpsdasvn(int index, ::google::protobuf::uint32 value);
  inline void add_latestpsdasvn(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      latestpsdasvn() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_latestpsdasvn();

  // repeated uint32 performanceRekeyGid = 9 [packed = true];
  inline int performancerekeygid_size() const;
  inline void clear_performancerekeygid();
  static const int kPerformanceRekeyGidFieldNumber = 9;
  inline ::google::protobuf::uint32 performancerekeygid(int index) const;
  inline void set_performancerekeygid(int index, ::google::protobuf::uint32 value);
  inline void add_performancerekeygid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      performancerekeygid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_performancerekeygid();

  // repeated uint32 ecSign256X = 10 [packed = true];
  inline int ecsign256x_size() const;
  inline void clear_ecsign256x();
  static const int kEcSign256XFieldNumber = 10;
  inline ::google::protobuf::uint32 ecsign256x(int index) const;
  inline void set_ecsign256x(int index, ::google::protobuf::uint32 value);
  inline void add_ecsign256x(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ecsign256x() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ecsign256x();

  // repeated uint32 ecSign256Y = 11 [packed = true];
  inline int ecsign256y_size() const;
  inline void clear_ecsign256y();
  static const int kEcSign256YFieldNumber = 11;
  inline ::google::protobuf::uint32 ecsign256y(int index) const;
  inline void set_ecsign256y(int index, ::google::protobuf::uint32 value);
  inline void add_ecsign256y(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      ecsign256y() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_ecsign256y();

  // repeated uint32 macSmk = 12 [packed = true];
  inline int macsmk_size() const;
  inline void clear_macsmk();
  static const int kMacSmkFieldNumber = 12;
  inline ::google::protobuf::uint32 macsmk(int index) const;
  inline void set_macsmk(int index, ::google::protobuf::uint32 value);
  inline void add_macsmk(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      macsmk() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_macsmk();

  // optional uint32 resultSize = 13;
  inline bool has_resultsize() const;
  inline void clear_resultsize();
  static const int kResultSizeFieldNumber = 13;
  inline ::google::protobuf::uint32 resultsize() const;
  inline void set_resultsize(::google::protobuf::uint32 value);

  // repeated uint32 reserved = 14 [packed = true];
  inline int reserved_size() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 14;
  inline ::google::protobuf::uint32 reserved(int index) const;
  inline void set_reserved(int index, ::google::protobuf::uint32 value);
  inline void add_reserved(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reserved() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reserved();

  // repeated uint32 payloadTag = 15 [packed = true];
  inline int payloadtag_size() const;
  inline void clear_payloadtag();
  static const int kPayloadTagFieldNumber = 15;
  inline ::google::protobuf::uint32 payloadtag(int index) const;
  inline void set_payloadtag(int index, ::google::protobuf::uint32 value);
  inline void add_payloadtag(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      payloadtag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_payloadtag();

  // repeated uint32 payload = 16 [packed = true];
  inline int payload_size() const;
  inline void clear_payload();
  static const int kPayloadFieldNumber = 16;
  inline ::google::protobuf::uint32 payload(int index) const;
  inline void set_payload(int index, ::google::protobuf::uint32 value);
  inline void add_payload(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      payload() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_payload();

  // @@protoc_insertion_point(class_scope:Messages.AttestationMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_epidgroupstatus();
  inline void clear_has_epidgroupstatus();
  inline void set_has_tcbevaluationstatus();
  inline void clear_has_tcbevaluationstatus();
  inline void set_has_pseevaluationstatus();
  inline void clear_has_pseevaluationstatus();
  inline void set_has_resultsize();
  inline void clear_has_resultsize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 epidgroupstatus_;
  ::google::protobuf::uint32 tcbevaluationstatus_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > latestequivalenttcbpsvn_;
  mutable int _latestequivalenttcbpsvn_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > latestpseisvsvn_;
  mutable int _latestpseisvsvn_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > latestpsdasvn_;
  mutable int _latestpsdasvn_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > performancerekeygid_;
  mutable int _performancerekeygid_cached_byte_size_;
  ::google::protobuf::uint32 pseevaluationstatus_;
  ::google::protobuf::uint32 resultsize_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ecsign256x_;
  mutable int _ecsign256x_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > ecsign256y_;
  mutable int _ecsign256y_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > macsmk_;
  mutable int _macsmk_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reserved_;
  mutable int _reserved_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > payloadtag_;
  mutable int _payloadtag_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > payload_;
  mutable int _payload_cached_byte_size_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static AttestationMessage* default_instance_;
};
// -------------------------------------------------------------------

class RegisterMessage : public ::google::protobuf::Message {
 public:
  RegisterMessage();
  virtual ~RegisterMessage();

  RegisterMessage(const RegisterMessage& from);

  inline RegisterMessage& operator=(const RegisterMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterMessage& default_instance();

  void Swap(RegisterMessage* other);

  // implements Message ----------------------------------------------

  RegisterMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterMessage& from);
  void MergeFrom(const RegisterMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // repeated uint32 cipherPhone = 2 [packed = true];
  inline int cipherphone_size() const;
  inline void clear_cipherphone();
  static const int kCipherPhoneFieldNumber = 2;
  inline ::google::protobuf::uint32 cipherphone(int index) const;
  inline void set_cipherphone(int index, ::google::protobuf::uint32 value);
  inline void add_cipherphone(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      cipherphone() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_cipherphone();

  // repeated uint32 mac = 4 [packed = true];
  inline int mac_size() const;
  inline void clear_mac();
  static const int kMacFieldNumber = 4;
  inline ::google::protobuf::uint32 mac(int index) const;
  inline void set_mac(int index, ::google::protobuf::uint32 value);
  inline void add_mac(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mac() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mac();

  // optional uint32 size = 3;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.RegisterMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > cipherphone_;
  mutable int _cipherphone_cached_byte_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mac_;
  mutable int _mac_cached_byte_size_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static RegisterMessage* default_instance_;
};
// -------------------------------------------------------------------

class PinCodeToMessage : public ::google::protobuf::Message {
 public:
  PinCodeToMessage();
  virtual ~PinCodeToMessage();

  PinCodeToMessage(const PinCodeToMessage& from);

  inline PinCodeToMessage& operator=(const PinCodeToMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PinCodeToMessage& default_instance();

  void Swap(PinCodeToMessage* other);

  // implements Message ----------------------------------------------

  PinCodeToMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PinCodeToMessage& from);
  void MergeFrom(const PinCodeToMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // optional uint32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // required uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.PinCodeToMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static PinCodeToMessage* default_instance_;
};
// -------------------------------------------------------------------

class PinCodeBackMessage : public ::google::protobuf::Message {
 public:
  PinCodeBackMessage();
  virtual ~PinCodeBackMessage();

  PinCodeBackMessage(const PinCodeBackMessage& from);

  inline PinCodeBackMessage& operator=(const PinCodeBackMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PinCodeBackMessage& default_instance();

  void Swap(PinCodeBackMessage* other);

  // implements Message ----------------------------------------------

  PinCodeBackMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PinCodeBackMessage& from);
  void MergeFrom(const PinCodeBackMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // repeated uint32 pinCode = 2 [packed = true];
  inline int pincode_size() const;
  inline void clear_pincode();
  static const int kPinCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 pincode(int index) const;
  inline void set_pincode(int index, ::google::protobuf::uint32 value);
  inline void add_pincode(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pincode() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pincode();

  // optional uint32 size = 3;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.PinCodeBackMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pincode_;
  mutable int _pincode_cached_byte_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static PinCodeBackMessage* default_instance_;
};
// -------------------------------------------------------------------

class ResponseMessage : public ::google::protobuf::Message {
 public:
  ResponseMessage();
  virtual ~ResponseMessage();

  ResponseMessage(const ResponseMessage& from);

  inline ResponseMessage& operator=(const ResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseMessage& default_instance();

  void Swap(ResponseMessage* other);

  // implements Message ----------------------------------------------

  ResponseMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponseMessage& from);
  void MergeFrom(const ResponseMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // repeated uint32 userID = 2 [packed = true];
  inline int userid_size() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google::protobuf::uint32 userid(int index) const;
  inline void set_userid(int index, ::google::protobuf::uint32 value);
  inline void add_userid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      userid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_userid();

  // optional uint32 size = 3;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 3;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // required uint32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.ResponseMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > userid_;
  mutable int _userid_cached_byte_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static ResponseMessage* default_instance_;
};
// -------------------------------------------------------------------

class SMSMessage : public ::google::protobuf::Message {
 public:
  SMSMessage();
  virtual ~SMSMessage();

  SMSMessage(const SMSMessage& from);

  inline SMSMessage& operator=(const SMSMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SMSMessage& default_instance();

  void Swap(SMSMessage* other);

  // implements Message ----------------------------------------------

  SMSMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SMSMessage& from);
  void MergeFrom(const SMSMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // repeated uint32 userID = 2 [packed = true];
  inline int userid_size() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 2;
  inline ::google::protobuf::uint32 userid(int index) const;
  inline void set_userid(int index, ::google::protobuf::uint32 value);
  inline void add_userid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      userid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_userid();

  // repeated uint32 sms = 3 [packed = true];
  inline int sms_size() const;
  inline void clear_sms();
  static const int kSmsFieldNumber = 3;
  inline ::google::protobuf::uint32 sms(int index) const;
  inline void set_sms(int index, ::google::protobuf::uint32 value);
  inline void add_sms(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sms() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sms();

  // optional uint32 size = 4;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 4;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.SMSMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > userid_;
  mutable int _userid_cached_byte_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sms_;
  mutable int _sms_cached_byte_size_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static SMSMessage* default_instance_;
};
// -------------------------------------------------------------------

class SMSResponseMessage : public ::google::protobuf::Message {
 public:
  SMSResponseMessage();
  virtual ~SMSResponseMessage();

  SMSResponseMessage(const SMSResponseMessage& from);

  inline SMSResponseMessage& operator=(const SMSResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SMSResponseMessage& default_instance();

  void Swap(SMSResponseMessage* other);

  // implements Message ----------------------------------------------

  SMSResponseMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SMSResponseMessage& from);
  void MergeFrom(const SMSResponseMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // optional uint32 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 size() const;
  inline void set_size(::google::protobuf::uint32 value);

  // required uint32 status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 status() const;
  inline void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.SMSResponseMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int type_;
  ::google::protobuf::uint32 size_;
  ::google::protobuf::uint32 status_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static SMSResponseMessage* default_instance_;
};
// -------------------------------------------------------------------

class AllInOneMessage : public ::google::protobuf::Message {
 public:
  AllInOneMessage();
  virtual ~AllInOneMessage();

  AllInOneMessage(const AllInOneMessage& from);

  inline AllInOneMessage& operator=(const AllInOneMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllInOneMessage& default_instance();

  void Swap(AllInOneMessage* other);

  // implements Message ----------------------------------------------

  AllInOneMessage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllInOneMessage& from);
  void MergeFrom(const AllInOneMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Messages.Type type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::Messages::Type type() const;
  inline void set_type(::Messages::Type value);

  // optional .Messages.SecretMessage secretMsg = 2;
  inline bool has_secretmsg() const;
  inline void clear_secretmsg();
  static const int kSecretMsgFieldNumber = 2;
  inline const ::Messages::SecretMessage& secretmsg() const;
  inline ::Messages::SecretMessage* mutable_secretmsg();
  inline ::Messages::SecretMessage* release_secretmsg();
  inline void set_allocated_secretmsg(::Messages::SecretMessage* secretmsg);

  // optional .Messages.InitialMessage initMsg = 3;
  inline bool has_initmsg() const;
  inline void clear_initmsg();
  static const int kInitMsgFieldNumber = 3;
  inline const ::Messages::InitialMessage& initmsg() const;
  inline ::Messages::InitialMessage* mutable_initmsg();
  inline ::Messages::InitialMessage* release_initmsg();
  inline void set_allocated_initmsg(::Messages::InitialMessage* initmsg);

  // optional .Messages.MessageMSG0 msg0 = 4;
  inline bool has_msg0() const;
  inline void clear_msg0();
  static const int kMsg0FieldNumber = 4;
  inline const ::Messages::MessageMSG0& msg0() const;
  inline ::Messages::MessageMSG0* mutable_msg0();
  inline ::Messages::MessageMSG0* release_msg0();
  inline void set_allocated_msg0(::Messages::MessageMSG0* msg0);

  // optional .Messages.MessageMSG1 msg1 = 5;
  inline bool has_msg1() const;
  inline void clear_msg1();
  static const int kMsg1FieldNumber = 5;
  inline const ::Messages::MessageMSG1& msg1() const;
  inline ::Messages::MessageMSG1* mutable_msg1();
  inline ::Messages::MessageMSG1* release_msg1();
  inline void set_allocated_msg1(::Messages::MessageMSG1* msg1);

  // optional .Messages.MessageMSG2 msg2 = 6;
  inline bool has_msg2() const;
  inline void clear_msg2();
  static const int kMsg2FieldNumber = 6;
  inline const ::Messages::MessageMSG2& msg2() const;
  inline ::Messages::MessageMSG2* mutable_msg2();
  inline ::Messages::MessageMSG2* release_msg2();
  inline void set_allocated_msg2(::Messages::MessageMSG2* msg2);

  // optional .Messages.MessageMSG3 msg3 = 7;
  inline bool has_msg3() const;
  inline void clear_msg3();
  static const int kMsg3FieldNumber = 7;
  inline const ::Messages::MessageMSG3& msg3() const;
  inline ::Messages::MessageMSG3* mutable_msg3();
  inline ::Messages::MessageMSG3* release_msg3();
  inline void set_allocated_msg3(::Messages::MessageMSG3* msg3);

  // optional .Messages.AttestationMessage attestMsg = 8;
  inline bool has_attestmsg() const;
  inline void clear_attestmsg();
  static const int kAttestMsgFieldNumber = 8;
  inline const ::Messages::AttestationMessage& attestmsg() const;
  inline ::Messages::AttestationMessage* mutable_attestmsg();
  inline ::Messages::AttestationMessage* release_attestmsg();
  inline void set_allocated_attestmsg(::Messages::AttestationMessage* attestmsg);

  // optional .Messages.RegisterMessage regMsg = 9;
  inline bool has_regmsg() const;
  inline void clear_regmsg();
  static const int kRegMsgFieldNumber = 9;
  inline const ::Messages::RegisterMessage& regmsg() const;
  inline ::Messages::RegisterMessage* mutable_regmsg();
  inline ::Messages::RegisterMessage* release_regmsg();
  inline void set_allocated_regmsg(::Messages::RegisterMessage* regmsg);

  // optional .Messages.PinCodeToMessage pincodetoMsg = 10;
  inline bool has_pincodetomsg() const;
  inline void clear_pincodetomsg();
  static const int kPincodetoMsgFieldNumber = 10;
  inline const ::Messages::PinCodeToMessage& pincodetomsg() const;
  inline ::Messages::PinCodeToMessage* mutable_pincodetomsg();
  inline ::Messages::PinCodeToMessage* release_pincodetomsg();
  inline void set_allocated_pincodetomsg(::Messages::PinCodeToMessage* pincodetomsg);

  // optional .Messages.PinCodeBackMessage pincodebackMsg = 11;
  inline bool has_pincodebackmsg() const;
  inline void clear_pincodebackmsg();
  static const int kPincodebackMsgFieldNumber = 11;
  inline const ::Messages::PinCodeBackMessage& pincodebackmsg() const;
  inline ::Messages::PinCodeBackMessage* mutable_pincodebackmsg();
  inline ::Messages::PinCodeBackMessage* release_pincodebackmsg();
  inline void set_allocated_pincodebackmsg(::Messages::PinCodeBackMessage* pincodebackmsg);

  // optional .Messages.ResponseMessage resMsg = 12;
  inline bool has_resmsg() const;
  inline void clear_resmsg();
  static const int kResMsgFieldNumber = 12;
  inline const ::Messages::ResponseMessage& resmsg() const;
  inline ::Messages::ResponseMessage* mutable_resmsg();
  inline ::Messages::ResponseMessage* release_resmsg();
  inline void set_allocated_resmsg(::Messages::ResponseMessage* resmsg);

  // optional .Messages.SMSMessage smsMsg = 13;
  inline bool has_smsmsg() const;
  inline void clear_smsmsg();
  static const int kSmsMsgFieldNumber = 13;
  inline const ::Messages::SMSMessage& smsmsg() const;
  inline ::Messages::SMSMessage* mutable_smsmsg();
  inline ::Messages::SMSMessage* release_smsmsg();
  inline void set_allocated_smsmsg(::Messages::SMSMessage* smsmsg);

  // optional .Messages.SMSResponseMessage smsresMsg = 14;
  inline bool has_smsresmsg() const;
  inline void clear_smsresmsg();
  static const int kSmsresMsgFieldNumber = 14;
  inline const ::Messages::SMSResponseMessage& smsresmsg() const;
  inline ::Messages::SMSResponseMessage* mutable_smsresmsg();
  inline ::Messages::SMSResponseMessage* release_smsresmsg();
  inline void set_allocated_smsresmsg(::Messages::SMSResponseMessage* smsresmsg);

  // required uint32 sessionID = 15;
  inline bool has_sessionid() const;
  inline void clear_sessionid();
  static const int kSessionIDFieldNumber = 15;
  inline ::google::protobuf::uint32 sessionid() const;
  inline void set_sessionid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Messages.AllInOneMessage)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_secretmsg();
  inline void clear_has_secretmsg();
  inline void set_has_initmsg();
  inline void clear_has_initmsg();
  inline void set_has_msg0();
  inline void clear_has_msg0();
  inline void set_has_msg1();
  inline void clear_has_msg1();
  inline void set_has_msg2();
  inline void clear_has_msg2();
  inline void set_has_msg3();
  inline void clear_has_msg3();
  inline void set_has_attestmsg();
  inline void clear_has_attestmsg();
  inline void set_has_regmsg();
  inline void clear_has_regmsg();
  inline void set_has_pincodetomsg();
  inline void clear_has_pincodetomsg();
  inline void set_has_pincodebackmsg();
  inline void clear_has_pincodebackmsg();
  inline void set_has_resmsg();
  inline void clear_has_resmsg();
  inline void set_has_smsmsg();
  inline void clear_has_smsmsg();
  inline void set_has_smsresmsg();
  inline void clear_has_smsresmsg();
  inline void set_has_sessionid();
  inline void clear_has_sessionid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Messages::SecretMessage* secretmsg_;
  ::Messages::InitialMessage* initmsg_;
  ::Messages::MessageMSG0* msg0_;
  ::Messages::MessageMSG1* msg1_;
  ::Messages::MessageMSG2* msg2_;
  ::Messages::MessageMSG3* msg3_;
  ::Messages::AttestationMessage* attestmsg_;
  int type_;
  ::google::protobuf::uint32 sessionid_;
  ::Messages::RegisterMessage* regmsg_;
  ::Messages::PinCodeToMessage* pincodetomsg_;
  ::Messages::PinCodeBackMessage* pincodebackmsg_;
  ::Messages::ResponseMessage* resmsg_;
  ::Messages::SMSMessage* smsmsg_;
  ::Messages::SMSResponseMessage* smsresmsg_;
  friend void  protobuf_AddDesc_Messages_2eproto();
  friend void protobuf_AssignDesc_Messages_2eproto();
  friend void protobuf_ShutdownFile_Messages_2eproto();

  void InitAsDefaultInstance();
  static AllInOneMessage* default_instance_;
};
// ===================================================================


// ===================================================================

// SecretMessage

// required .Messages.Type type = 1;
inline bool SecretMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SecretMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SecretMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SecretMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type SecretMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.SecretMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void SecretMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.SecretMessage.type)
}

// optional uint32 size = 2;
inline bool SecretMessage::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SecretMessage::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SecretMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SecretMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 SecretMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.SecretMessage.size)
  return size_;
}
inline void SecretMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.SecretMessage.size)
}

// optional uint32 status = 3;
inline bool SecretMessage::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SecretMessage::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SecretMessage::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SecretMessage::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 SecretMessage::status() const {
  // @@protoc_insertion_point(field_get:Messages.SecretMessage.status)
  return status_;
}
inline void SecretMessage::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Messages.SecretMessage.status)
}

// -------------------------------------------------------------------

// InitialMessage

// required .Messages.Type type = 1;
inline bool InitialMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitialMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitialMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitialMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type InitialMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.InitialMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void InitialMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.InitialMessage.type)
}

// optional uint32 size = 2;
inline bool InitialMessage::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitialMessage::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitialMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitialMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 InitialMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.InitialMessage.size)
  return size_;
}
inline void InitialMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.InitialMessage.size)
}

// optional uint32 status = 3;
inline bool InitialMessage::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitialMessage::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitialMessage::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitialMessage::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 InitialMessage::status() const {
  // @@protoc_insertion_point(field_get:Messages.InitialMessage.status)
  return status_;
}
inline void InitialMessage::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Messages.InitialMessage.status)
}

// -------------------------------------------------------------------

// MessageMSG0

// required .Messages.Type type = 1;
inline bool MessageMSG0::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageMSG0::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageMSG0::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageMSG0::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type MessageMSG0::type() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG0.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void MessageMSG0::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG0.type)
}

// required uint32 epid = 2;
inline bool MessageMSG0::has_epid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageMSG0::set_has_epid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageMSG0::clear_has_epid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageMSG0::clear_epid() {
  epid_ = 0u;
  clear_has_epid();
}
inline ::google::protobuf::uint32 MessageMSG0::epid() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG0.epid)
  return epid_;
}
inline void MessageMSG0::set_epid(::google::protobuf::uint32 value) {
  set_has_epid();
  epid_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG0.epid)
}

// optional uint32 status = 3;
inline bool MessageMSG0::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageMSG0::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageMSG0::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageMSG0::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MessageMSG0::status() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG0.status)
  return status_;
}
inline void MessageMSG0::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG0.status)
}

// -------------------------------------------------------------------

// MessageMSG1

// required .Messages.Type type = 1;
inline bool MessageMSG1::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageMSG1::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageMSG1::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageMSG1::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type MessageMSG1::type() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG1.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void MessageMSG1::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG1.type)
}

// repeated uint32 GaX = 2 [packed = true];
inline int MessageMSG1::gax_size() const {
  return gax_.size();
}
inline void MessageMSG1::clear_gax() {
  gax_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG1::gax(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG1.GaX)
  return gax_.Get(index);
}
inline void MessageMSG1::set_gax(int index, ::google::protobuf::uint32 value) {
  gax_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG1.GaX)
}
inline void MessageMSG1::add_gax(::google::protobuf::uint32 value) {
  gax_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG1.GaX)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG1::gax() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG1.GaX)
  return gax_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG1::mutable_gax() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG1.GaX)
  return &gax_;
}

// repeated uint32 GaY = 3 [packed = true];
inline int MessageMSG1::gay_size() const {
  return gay_.size();
}
inline void MessageMSG1::clear_gay() {
  gay_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG1::gay(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG1.GaY)
  return gay_.Get(index);
}
inline void MessageMSG1::set_gay(int index, ::google::protobuf::uint32 value) {
  gay_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG1.GaY)
}
inline void MessageMSG1::add_gay(::google::protobuf::uint32 value) {
  gay_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG1.GaY)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG1::gay() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG1.GaY)
  return gay_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG1::mutable_gay() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG1.GaY)
  return &gay_;
}

// repeated uint32 GID = 4 [packed = true];
inline int MessageMSG1::gid_size() const {
  return gid_.size();
}
inline void MessageMSG1::clear_gid() {
  gid_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG1::gid(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG1.GID)
  return gid_.Get(index);
}
inline void MessageMSG1::set_gid(int index, ::google::protobuf::uint32 value) {
  gid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG1.GID)
}
inline void MessageMSG1::add_gid(::google::protobuf::uint32 value) {
  gid_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG1.GID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG1::gid() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG1.GID)
  return gid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG1::mutable_gid() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG1.GID)
  return &gid_;
}

// required uint32 status = 5;
inline bool MessageMSG1::has_status() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageMSG1::set_has_status() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageMSG1::clear_has_status() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageMSG1::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MessageMSG1::status() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG1.status)
  return status_;
}
inline void MessageMSG1::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG1.status)
}

// -------------------------------------------------------------------

// MessageMSG2

// required .Messages.Type type = 1;
inline bool MessageMSG2::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageMSG2::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageMSG2::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageMSG2::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type MessageMSG2::type() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void MessageMSG2::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.type)
}

// optional uint32 size = 2;
inline bool MessageMSG2::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageMSG2::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageMSG2::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageMSG2::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 MessageMSG2::size() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.size)
  return size_;
}
inline void MessageMSG2::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.size)
}

// repeated uint32 publicKeyGx = 3 [packed = true];
inline int MessageMSG2::publickeygx_size() const {
  return publickeygx_.size();
}
inline void MessageMSG2::clear_publickeygx() {
  publickeygx_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG2::publickeygx(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.publicKeyGx)
  return publickeygx_.Get(index);
}
inline void MessageMSG2::set_publickeygx(int index, ::google::protobuf::uint32 value) {
  publickeygx_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.publicKeyGx)
}
inline void MessageMSG2::add_publickeygx(::google::protobuf::uint32 value) {
  publickeygx_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG2.publicKeyGx)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG2::publickeygx() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG2.publicKeyGx)
  return publickeygx_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG2::mutable_publickeygx() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG2.publicKeyGx)
  return &publickeygx_;
}

// repeated uint32 publicKeyGy = 4 [packed = true];
inline int MessageMSG2::publickeygy_size() const {
  return publickeygy_.size();
}
inline void MessageMSG2::clear_publickeygy() {
  publickeygy_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG2::publickeygy(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.publicKeyGy)
  return publickeygy_.Get(index);
}
inline void MessageMSG2::set_publickeygy(int index, ::google::protobuf::uint32 value) {
  publickeygy_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.publicKeyGy)
}
inline void MessageMSG2::add_publickeygy(::google::protobuf::uint32 value) {
  publickeygy_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG2.publicKeyGy)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG2::publickeygy() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG2.publicKeyGy)
  return publickeygy_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG2::mutable_publickeygy() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG2.publicKeyGy)
  return &publickeygy_;
}

// optional uint32 quoteType = 5;
inline bool MessageMSG2::has_quotetype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageMSG2::set_has_quotetype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageMSG2::clear_has_quotetype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageMSG2::clear_quotetype() {
  quotetype_ = 0u;
  clear_has_quotetype();
}
inline ::google::protobuf::uint32 MessageMSG2::quotetype() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.quoteType)
  return quotetype_;
}
inline void MessageMSG2::set_quotetype(::google::protobuf::uint32 value) {
  set_has_quotetype();
  quotetype_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.quoteType)
}

// repeated uint32 spid = 6 [packed = true];
inline int MessageMSG2::spid_size() const {
  return spid_.size();
}
inline void MessageMSG2::clear_spid() {
  spid_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG2::spid(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.spid)
  return spid_.Get(index);
}
inline void MessageMSG2::set_spid(int index, ::google::protobuf::uint32 value) {
  spid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.spid)
}
inline void MessageMSG2::add_spid(::google::protobuf::uint32 value) {
  spid_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG2.spid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG2::spid() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG2.spid)
  return spid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG2::mutable_spid() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG2.spid)
  return &spid_;
}

// optional uint32 cmacKdfId = 7;
inline bool MessageMSG2::has_cmackdfid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MessageMSG2::set_has_cmackdfid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MessageMSG2::clear_has_cmackdfid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MessageMSG2::clear_cmackdfid() {
  cmackdfid_ = 0u;
  clear_has_cmackdfid();
}
inline ::google::protobuf::uint32 MessageMSG2::cmackdfid() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.cmacKdfId)
  return cmackdfid_;
}
inline void MessageMSG2::set_cmackdfid(::google::protobuf::uint32 value) {
  set_has_cmackdfid();
  cmackdfid_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.cmacKdfId)
}

// repeated uint32 signatureX = 8 [packed = true];
inline int MessageMSG2::signaturex_size() const {
  return signaturex_.size();
}
inline void MessageMSG2::clear_signaturex() {
  signaturex_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG2::signaturex(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.signatureX)
  return signaturex_.Get(index);
}
inline void MessageMSG2::set_signaturex(int index, ::google::protobuf::uint32 value) {
  signaturex_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.signatureX)
}
inline void MessageMSG2::add_signaturex(::google::protobuf::uint32 value) {
  signaturex_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG2.signatureX)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG2::signaturex() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG2.signatureX)
  return signaturex_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG2::mutable_signaturex() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG2.signatureX)
  return &signaturex_;
}

// repeated uint32 signatureY = 9 [packed = true];
inline int MessageMSG2::signaturey_size() const {
  return signaturey_.size();
}
inline void MessageMSG2::clear_signaturey() {
  signaturey_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG2::signaturey(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.signatureY)
  return signaturey_.Get(index);
}
inline void MessageMSG2::set_signaturey(int index, ::google::protobuf::uint32 value) {
  signaturey_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.signatureY)
}
inline void MessageMSG2::add_signaturey(::google::protobuf::uint32 value) {
  signaturey_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG2.signatureY)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG2::signaturey() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG2.signatureY)
  return signaturey_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG2::mutable_signaturey() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG2.signatureY)
  return &signaturey_;
}

// repeated uint32 smac = 10 [packed = true];
inline int MessageMSG2::smac_size() const {
  return smac_.size();
}
inline void MessageMSG2::clear_smac() {
  smac_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG2::smac(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.smac)
  return smac_.Get(index);
}
inline void MessageMSG2::set_smac(int index, ::google::protobuf::uint32 value) {
  smac_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.smac)
}
inline void MessageMSG2::add_smac(::google::protobuf::uint32 value) {
  smac_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG2.smac)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG2::smac() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG2.smac)
  return smac_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG2::mutable_smac() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG2.smac)
  return &smac_;
}

// optional uint32 sizeSigrl = 11;
inline bool MessageMSG2::has_sizesigrl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void MessageMSG2::set_has_sizesigrl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void MessageMSG2::clear_has_sizesigrl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void MessageMSG2::clear_sizesigrl() {
  sizesigrl_ = 0u;
  clear_has_sizesigrl();
}
inline ::google::protobuf::uint32 MessageMSG2::sizesigrl() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.sizeSigrl)
  return sizesigrl_;
}
inline void MessageMSG2::set_sizesigrl(::google::protobuf::uint32 value) {
  set_has_sizesigrl();
  sizesigrl_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.sizeSigrl)
}

// repeated uint32 sigrl = 12 [packed = true];
inline int MessageMSG2::sigrl_size() const {
  return sigrl_.size();
}
inline void MessageMSG2::clear_sigrl() {
  sigrl_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG2::sigrl(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG2.sigrl)
  return sigrl_.Get(index);
}
inline void MessageMSG2::set_sigrl(int index, ::google::protobuf::uint32 value) {
  sigrl_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG2.sigrl)
}
inline void MessageMSG2::add_sigrl(::google::protobuf::uint32 value) {
  sigrl_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG2.sigrl)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG2::sigrl() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG2.sigrl)
  return sigrl_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG2::mutable_sigrl() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG2.sigrl)
  return &sigrl_;
}

// -------------------------------------------------------------------

// MessageMSG3

// required .Messages.Type type = 1;
inline bool MessageMSG3::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageMSG3::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageMSG3::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageMSG3::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type MessageMSG3::type() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG3.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void MessageMSG3::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG3.type)
}

// optional uint32 size = 2;
inline bool MessageMSG3::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageMSG3::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageMSG3::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageMSG3::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 MessageMSG3::size() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG3.size)
  return size_;
}
inline void MessageMSG3::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG3.size)
}

// repeated uint32 sgxMac = 3 [packed = true];
inline int MessageMSG3::sgxmac_size() const {
  return sgxmac_.size();
}
inline void MessageMSG3::clear_sgxmac() {
  sgxmac_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG3::sgxmac(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG3.sgxMac)
  return sgxmac_.Get(index);
}
inline void MessageMSG3::set_sgxmac(int index, ::google::protobuf::uint32 value) {
  sgxmac_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG3.sgxMac)
}
inline void MessageMSG3::add_sgxmac(::google::protobuf::uint32 value) {
  sgxmac_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG3.sgxMac)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG3::sgxmac() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG3.sgxMac)
  return sgxmac_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG3::mutable_sgxmac() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG3.sgxMac)
  return &sgxmac_;
}

// repeated uint32 gaxMsg3 = 4 [packed = true];
inline int MessageMSG3::gaxmsg3_size() const {
  return gaxmsg3_.size();
}
inline void MessageMSG3::clear_gaxmsg3() {
  gaxmsg3_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG3::gaxmsg3(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG3.gaxMsg3)
  return gaxmsg3_.Get(index);
}
inline void MessageMSG3::set_gaxmsg3(int index, ::google::protobuf::uint32 value) {
  gaxmsg3_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG3.gaxMsg3)
}
inline void MessageMSG3::add_gaxmsg3(::google::protobuf::uint32 value) {
  gaxmsg3_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG3.gaxMsg3)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG3::gaxmsg3() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG3.gaxMsg3)
  return gaxmsg3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG3::mutable_gaxmsg3() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG3.gaxMsg3)
  return &gaxmsg3_;
}

// repeated uint32 gayMsg3 = 5 [packed = true];
inline int MessageMSG3::gaymsg3_size() const {
  return gaymsg3_.size();
}
inline void MessageMSG3::clear_gaymsg3() {
  gaymsg3_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG3::gaymsg3(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG3.gayMsg3)
  return gaymsg3_.Get(index);
}
inline void MessageMSG3::set_gaymsg3(int index, ::google::protobuf::uint32 value) {
  gaymsg3_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG3.gayMsg3)
}
inline void MessageMSG3::add_gaymsg3(::google::protobuf::uint32 value) {
  gaymsg3_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG3.gayMsg3)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG3::gaymsg3() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG3.gayMsg3)
  return gaymsg3_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG3::mutable_gaymsg3() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG3.gayMsg3)
  return &gaymsg3_;
}

// repeated uint32 secProperty = 6 [packed = true];
inline int MessageMSG3::secproperty_size() const {
  return secproperty_.size();
}
inline void MessageMSG3::clear_secproperty() {
  secproperty_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG3::secproperty(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG3.secProperty)
  return secproperty_.Get(index);
}
inline void MessageMSG3::set_secproperty(int index, ::google::protobuf::uint32 value) {
  secproperty_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG3.secProperty)
}
inline void MessageMSG3::add_secproperty(::google::protobuf::uint32 value) {
  secproperty_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG3.secProperty)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG3::secproperty() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG3.secProperty)
  return secproperty_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG3::mutable_secproperty() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG3.secProperty)
  return &secproperty_;
}

// repeated uint32 quote = 7 [packed = true];
inline int MessageMSG3::quote_size() const {
  return quote_.size();
}
inline void MessageMSG3::clear_quote() {
  quote_.Clear();
}
inline ::google::protobuf::uint32 MessageMSG3::quote(int index) const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG3.quote)
  return quote_.Get(index);
}
inline void MessageMSG3::set_quote(int index, ::google::protobuf::uint32 value) {
  quote_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.MessageMSG3.quote)
}
inline void MessageMSG3::add_quote(::google::protobuf::uint32 value) {
  quote_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.MessageMSG3.quote)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MessageMSG3::quote() const {
  // @@protoc_insertion_point(field_list:Messages.MessageMSG3.quote)
  return quote_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MessageMSG3::mutable_quote() {
  // @@protoc_insertion_point(field_mutable_list:Messages.MessageMSG3.quote)
  return &quote_;
}

// required uint32 status = 8;
inline bool MessageMSG3::has_status() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void MessageMSG3::set_has_status() {
  _has_bits_[0] |= 0x00000080u;
}
inline void MessageMSG3::clear_has_status() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void MessageMSG3::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 MessageMSG3::status() const {
  // @@protoc_insertion_point(field_get:Messages.MessageMSG3.status)
  return status_;
}
inline void MessageMSG3::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Messages.MessageMSG3.status)
}

// -------------------------------------------------------------------

// AttestationMessage

// required .Messages.Type type = 1;
inline bool AttestationMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttestationMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttestationMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttestationMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type AttestationMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void AttestationMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.type)
}

// required uint32 size = 2;
inline bool AttestationMessage::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttestationMessage::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttestationMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttestationMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 AttestationMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.size)
  return size_;
}
inline void AttestationMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.size)
}

// optional uint32 epidGroupStatus = 3;
inline bool AttestationMessage::has_epidgroupstatus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttestationMessage::set_has_epidgroupstatus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttestationMessage::clear_has_epidgroupstatus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttestationMessage::clear_epidgroupstatus() {
  epidgroupstatus_ = 0u;
  clear_has_epidgroupstatus();
}
inline ::google::protobuf::uint32 AttestationMessage::epidgroupstatus() const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.epidGroupStatus)
  return epidgroupstatus_;
}
inline void AttestationMessage::set_epidgroupstatus(::google::protobuf::uint32 value) {
  set_has_epidgroupstatus();
  epidgroupstatus_ = value;
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.epidGroupStatus)
}

// optional uint32 tcbEvaluationStatus = 4;
inline bool AttestationMessage::has_tcbevaluationstatus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttestationMessage::set_has_tcbevaluationstatus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttestationMessage::clear_has_tcbevaluationstatus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttestationMessage::clear_tcbevaluationstatus() {
  tcbevaluationstatus_ = 0u;
  clear_has_tcbevaluationstatus();
}
inline ::google::protobuf::uint32 AttestationMessage::tcbevaluationstatus() const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.tcbEvaluationStatus)
  return tcbevaluationstatus_;
}
inline void AttestationMessage::set_tcbevaluationstatus(::google::protobuf::uint32 value) {
  set_has_tcbevaluationstatus();
  tcbevaluationstatus_ = value;
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.tcbEvaluationStatus)
}

// optional uint32 pseEvaluationStatus = 5;
inline bool AttestationMessage::has_pseevaluationstatus() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AttestationMessage::set_has_pseevaluationstatus() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AttestationMessage::clear_has_pseevaluationstatus() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AttestationMessage::clear_pseevaluationstatus() {
  pseevaluationstatus_ = 0u;
  clear_has_pseevaluationstatus();
}
inline ::google::protobuf::uint32 AttestationMessage::pseevaluationstatus() const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.pseEvaluationStatus)
  return pseevaluationstatus_;
}
inline void AttestationMessage::set_pseevaluationstatus(::google::protobuf::uint32 value) {
  set_has_pseevaluationstatus();
  pseevaluationstatus_ = value;
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.pseEvaluationStatus)
}

// repeated uint32 latestEquivalentTcbPsvn = 6 [packed = true];
inline int AttestationMessage::latestequivalenttcbpsvn_size() const {
  return latestequivalenttcbpsvn_.size();
}
inline void AttestationMessage::clear_latestequivalenttcbpsvn() {
  latestequivalenttcbpsvn_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::latestequivalenttcbpsvn(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.latestEquivalentTcbPsvn)
  return latestequivalenttcbpsvn_.Get(index);
}
inline void AttestationMessage::set_latestequivalenttcbpsvn(int index, ::google::protobuf::uint32 value) {
  latestequivalenttcbpsvn_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.latestEquivalentTcbPsvn)
}
inline void AttestationMessage::add_latestequivalenttcbpsvn(::google::protobuf::uint32 value) {
  latestequivalenttcbpsvn_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.latestEquivalentTcbPsvn)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::latestequivalenttcbpsvn() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.latestEquivalentTcbPsvn)
  return latestequivalenttcbpsvn_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_latestequivalenttcbpsvn() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.latestEquivalentTcbPsvn)
  return &latestequivalenttcbpsvn_;
}

// repeated uint32 latestPseIsvsvn = 7 [packed = true];
inline int AttestationMessage::latestpseisvsvn_size() const {
  return latestpseisvsvn_.size();
}
inline void AttestationMessage::clear_latestpseisvsvn() {
  latestpseisvsvn_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::latestpseisvsvn(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.latestPseIsvsvn)
  return latestpseisvsvn_.Get(index);
}
inline void AttestationMessage::set_latestpseisvsvn(int index, ::google::protobuf::uint32 value) {
  latestpseisvsvn_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.latestPseIsvsvn)
}
inline void AttestationMessage::add_latestpseisvsvn(::google::protobuf::uint32 value) {
  latestpseisvsvn_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.latestPseIsvsvn)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::latestpseisvsvn() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.latestPseIsvsvn)
  return latestpseisvsvn_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_latestpseisvsvn() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.latestPseIsvsvn)
  return &latestpseisvsvn_;
}

// repeated uint32 latestPsdaSvn = 8 [packed = true];
inline int AttestationMessage::latestpsdasvn_size() const {
  return latestpsdasvn_.size();
}
inline void AttestationMessage::clear_latestpsdasvn() {
  latestpsdasvn_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::latestpsdasvn(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.latestPsdaSvn)
  return latestpsdasvn_.Get(index);
}
inline void AttestationMessage::set_latestpsdasvn(int index, ::google::protobuf::uint32 value) {
  latestpsdasvn_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.latestPsdaSvn)
}
inline void AttestationMessage::add_latestpsdasvn(::google::protobuf::uint32 value) {
  latestpsdasvn_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.latestPsdaSvn)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::latestpsdasvn() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.latestPsdaSvn)
  return latestpsdasvn_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_latestpsdasvn() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.latestPsdaSvn)
  return &latestpsdasvn_;
}

// repeated uint32 performanceRekeyGid = 9 [packed = true];
inline int AttestationMessage::performancerekeygid_size() const {
  return performancerekeygid_.size();
}
inline void AttestationMessage::clear_performancerekeygid() {
  performancerekeygid_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::performancerekeygid(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.performanceRekeyGid)
  return performancerekeygid_.Get(index);
}
inline void AttestationMessage::set_performancerekeygid(int index, ::google::protobuf::uint32 value) {
  performancerekeygid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.performanceRekeyGid)
}
inline void AttestationMessage::add_performancerekeygid(::google::protobuf::uint32 value) {
  performancerekeygid_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.performanceRekeyGid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::performancerekeygid() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.performanceRekeyGid)
  return performancerekeygid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_performancerekeygid() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.performanceRekeyGid)
  return &performancerekeygid_;
}

// repeated uint32 ecSign256X = 10 [packed = true];
inline int AttestationMessage::ecsign256x_size() const {
  return ecsign256x_.size();
}
inline void AttestationMessage::clear_ecsign256x() {
  ecsign256x_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::ecsign256x(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.ecSign256X)
  return ecsign256x_.Get(index);
}
inline void AttestationMessage::set_ecsign256x(int index, ::google::protobuf::uint32 value) {
  ecsign256x_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.ecSign256X)
}
inline void AttestationMessage::add_ecsign256x(::google::protobuf::uint32 value) {
  ecsign256x_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.ecSign256X)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::ecsign256x() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.ecSign256X)
  return ecsign256x_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_ecsign256x() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.ecSign256X)
  return &ecsign256x_;
}

// repeated uint32 ecSign256Y = 11 [packed = true];
inline int AttestationMessage::ecsign256y_size() const {
  return ecsign256y_.size();
}
inline void AttestationMessage::clear_ecsign256y() {
  ecsign256y_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::ecsign256y(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.ecSign256Y)
  return ecsign256y_.Get(index);
}
inline void AttestationMessage::set_ecsign256y(int index, ::google::protobuf::uint32 value) {
  ecsign256y_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.ecSign256Y)
}
inline void AttestationMessage::add_ecsign256y(::google::protobuf::uint32 value) {
  ecsign256y_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.ecSign256Y)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::ecsign256y() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.ecSign256Y)
  return ecsign256y_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_ecsign256y() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.ecSign256Y)
  return &ecsign256y_;
}

// repeated uint32 macSmk = 12 [packed = true];
inline int AttestationMessage::macsmk_size() const {
  return macsmk_.size();
}
inline void AttestationMessage::clear_macsmk() {
  macsmk_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::macsmk(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.macSmk)
  return macsmk_.Get(index);
}
inline void AttestationMessage::set_macsmk(int index, ::google::protobuf::uint32 value) {
  macsmk_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.macSmk)
}
inline void AttestationMessage::add_macsmk(::google::protobuf::uint32 value) {
  macsmk_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.macSmk)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::macsmk() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.macSmk)
  return macsmk_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_macsmk() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.macSmk)
  return &macsmk_;
}

// optional uint32 resultSize = 13;
inline bool AttestationMessage::has_resultsize() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AttestationMessage::set_has_resultsize() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AttestationMessage::clear_has_resultsize() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AttestationMessage::clear_resultsize() {
  resultsize_ = 0u;
  clear_has_resultsize();
}
inline ::google::protobuf::uint32 AttestationMessage::resultsize() const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.resultSize)
  return resultsize_;
}
inline void AttestationMessage::set_resultsize(::google::protobuf::uint32 value) {
  set_has_resultsize();
  resultsize_ = value;
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.resultSize)
}

// repeated uint32 reserved = 14 [packed = true];
inline int AttestationMessage::reserved_size() const {
  return reserved_.size();
}
inline void AttestationMessage::clear_reserved() {
  reserved_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::reserved(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.reserved)
  return reserved_.Get(index);
}
inline void AttestationMessage::set_reserved(int index, ::google::protobuf::uint32 value) {
  reserved_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.reserved)
}
inline void AttestationMessage::add_reserved(::google::protobuf::uint32 value) {
  reserved_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.reserved)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::reserved() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.reserved)
  return reserved_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_reserved() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.reserved)
  return &reserved_;
}

// repeated uint32 payloadTag = 15 [packed = true];
inline int AttestationMessage::payloadtag_size() const {
  return payloadtag_.size();
}
inline void AttestationMessage::clear_payloadtag() {
  payloadtag_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::payloadtag(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.payloadTag)
  return payloadtag_.Get(index);
}
inline void AttestationMessage::set_payloadtag(int index, ::google::protobuf::uint32 value) {
  payloadtag_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.payloadTag)
}
inline void AttestationMessage::add_payloadtag(::google::protobuf::uint32 value) {
  payloadtag_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.payloadTag)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::payloadtag() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.payloadTag)
  return payloadtag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_payloadtag() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.payloadTag)
  return &payloadtag_;
}

// repeated uint32 payload = 16 [packed = true];
inline int AttestationMessage::payload_size() const {
  return payload_.size();
}
inline void AttestationMessage::clear_payload() {
  payload_.Clear();
}
inline ::google::protobuf::uint32 AttestationMessage::payload(int index) const {
  // @@protoc_insertion_point(field_get:Messages.AttestationMessage.payload)
  return payload_.Get(index);
}
inline void AttestationMessage::set_payload(int index, ::google::protobuf::uint32 value) {
  payload_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.AttestationMessage.payload)
}
inline void AttestationMessage::add_payload(::google::protobuf::uint32 value) {
  payload_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.AttestationMessage.payload)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AttestationMessage::payload() const {
  // @@protoc_insertion_point(field_list:Messages.AttestationMessage.payload)
  return payload_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AttestationMessage::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:Messages.AttestationMessage.payload)
  return &payload_;
}

// -------------------------------------------------------------------

// RegisterMessage

// required .Messages.Type type = 1;
inline bool RegisterMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type RegisterMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.RegisterMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void RegisterMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.RegisterMessage.type)
}

// repeated uint32 cipherPhone = 2 [packed = true];
inline int RegisterMessage::cipherphone_size() const {
  return cipherphone_.size();
}
inline void RegisterMessage::clear_cipherphone() {
  cipherphone_.Clear();
}
inline ::google::protobuf::uint32 RegisterMessage::cipherphone(int index) const {
  // @@protoc_insertion_point(field_get:Messages.RegisterMessage.cipherPhone)
  return cipherphone_.Get(index);
}
inline void RegisterMessage::set_cipherphone(int index, ::google::protobuf::uint32 value) {
  cipherphone_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.RegisterMessage.cipherPhone)
}
inline void RegisterMessage::add_cipherphone(::google::protobuf::uint32 value) {
  cipherphone_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.RegisterMessage.cipherPhone)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RegisterMessage::cipherphone() const {
  // @@protoc_insertion_point(field_list:Messages.RegisterMessage.cipherPhone)
  return cipherphone_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RegisterMessage::mutable_cipherphone() {
  // @@protoc_insertion_point(field_mutable_list:Messages.RegisterMessage.cipherPhone)
  return &cipherphone_;
}

// repeated uint32 mac = 4 [packed = true];
inline int RegisterMessage::mac_size() const {
  return mac_.size();
}
inline void RegisterMessage::clear_mac() {
  mac_.Clear();
}
inline ::google::protobuf::uint32 RegisterMessage::mac(int index) const {
  // @@protoc_insertion_point(field_get:Messages.RegisterMessage.mac)
  return mac_.Get(index);
}
inline void RegisterMessage::set_mac(int index, ::google::protobuf::uint32 value) {
  mac_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.RegisterMessage.mac)
}
inline void RegisterMessage::add_mac(::google::protobuf::uint32 value) {
  mac_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.RegisterMessage.mac)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RegisterMessage::mac() const {
  // @@protoc_insertion_point(field_list:Messages.RegisterMessage.mac)
  return mac_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RegisterMessage::mutable_mac() {
  // @@protoc_insertion_point(field_mutable_list:Messages.RegisterMessage.mac)
  return &mac_;
}

// optional uint32 size = 3;
inline bool RegisterMessage::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RegisterMessage::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RegisterMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RegisterMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 RegisterMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.RegisterMessage.size)
  return size_;
}
inline void RegisterMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.RegisterMessage.size)
}

// -------------------------------------------------------------------

// PinCodeToMessage

// required .Messages.Type type = 1;
inline bool PinCodeToMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PinCodeToMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PinCodeToMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PinCodeToMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type PinCodeToMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.PinCodeToMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void PinCodeToMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.PinCodeToMessage.type)
}

// optional uint32 size = 2;
inline bool PinCodeToMessage::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PinCodeToMessage::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PinCodeToMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PinCodeToMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 PinCodeToMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.PinCodeToMessage.size)
  return size_;
}
inline void PinCodeToMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.PinCodeToMessage.size)
}

// required uint32 status = 3;
inline bool PinCodeToMessage::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PinCodeToMessage::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PinCodeToMessage::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PinCodeToMessage::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 PinCodeToMessage::status() const {
  // @@protoc_insertion_point(field_get:Messages.PinCodeToMessage.status)
  return status_;
}
inline void PinCodeToMessage::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Messages.PinCodeToMessage.status)
}

// -------------------------------------------------------------------

// PinCodeBackMessage

// required .Messages.Type type = 1;
inline bool PinCodeBackMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PinCodeBackMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PinCodeBackMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PinCodeBackMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type PinCodeBackMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.PinCodeBackMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void PinCodeBackMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.PinCodeBackMessage.type)
}

// repeated uint32 pinCode = 2 [packed = true];
inline int PinCodeBackMessage::pincode_size() const {
  return pincode_.size();
}
inline void PinCodeBackMessage::clear_pincode() {
  pincode_.Clear();
}
inline ::google::protobuf::uint32 PinCodeBackMessage::pincode(int index) const {
  // @@protoc_insertion_point(field_get:Messages.PinCodeBackMessage.pinCode)
  return pincode_.Get(index);
}
inline void PinCodeBackMessage::set_pincode(int index, ::google::protobuf::uint32 value) {
  pincode_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.PinCodeBackMessage.pinCode)
}
inline void PinCodeBackMessage::add_pincode(::google::protobuf::uint32 value) {
  pincode_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.PinCodeBackMessage.pinCode)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PinCodeBackMessage::pincode() const {
  // @@protoc_insertion_point(field_list:Messages.PinCodeBackMessage.pinCode)
  return pincode_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PinCodeBackMessage::mutable_pincode() {
  // @@protoc_insertion_point(field_mutable_list:Messages.PinCodeBackMessage.pinCode)
  return &pincode_;
}

// optional uint32 size = 3;
inline bool PinCodeBackMessage::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PinCodeBackMessage::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PinCodeBackMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PinCodeBackMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 PinCodeBackMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.PinCodeBackMessage.size)
  return size_;
}
inline void PinCodeBackMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.PinCodeBackMessage.size)
}

// -------------------------------------------------------------------

// ResponseMessage

// required .Messages.Type type = 1;
inline bool ResponseMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResponseMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResponseMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResponseMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type ResponseMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.ResponseMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void ResponseMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.ResponseMessage.type)
}

// repeated uint32 userID = 2 [packed = true];
inline int ResponseMessage::userid_size() const {
  return userid_.size();
}
inline void ResponseMessage::clear_userid() {
  userid_.Clear();
}
inline ::google::protobuf::uint32 ResponseMessage::userid(int index) const {
  // @@protoc_insertion_point(field_get:Messages.ResponseMessage.userID)
  return userid_.Get(index);
}
inline void ResponseMessage::set_userid(int index, ::google::protobuf::uint32 value) {
  userid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.ResponseMessage.userID)
}
inline void ResponseMessage::add_userid(::google::protobuf::uint32 value) {
  userid_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.ResponseMessage.userID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
ResponseMessage::userid() const {
  // @@protoc_insertion_point(field_list:Messages.ResponseMessage.userID)
  return userid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
ResponseMessage::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:Messages.ResponseMessage.userID)
  return &userid_;
}

// optional uint32 size = 3;
inline bool ResponseMessage::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResponseMessage::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResponseMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResponseMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 ResponseMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.ResponseMessage.size)
  return size_;
}
inline void ResponseMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.ResponseMessage.size)
}

// required uint32 status = 4;
inline bool ResponseMessage::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ResponseMessage::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ResponseMessage::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ResponseMessage::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 ResponseMessage::status() const {
  // @@protoc_insertion_point(field_get:Messages.ResponseMessage.status)
  return status_;
}
inline void ResponseMessage::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Messages.ResponseMessage.status)
}

// -------------------------------------------------------------------

// SMSMessage

// required .Messages.Type type = 1;
inline bool SMSMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SMSMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SMSMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SMSMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type SMSMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.SMSMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void SMSMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.SMSMessage.type)
}

// repeated uint32 userID = 2 [packed = true];
inline int SMSMessage::userid_size() const {
  return userid_.size();
}
inline void SMSMessage::clear_userid() {
  userid_.Clear();
}
inline ::google::protobuf::uint32 SMSMessage::userid(int index) const {
  // @@protoc_insertion_point(field_get:Messages.SMSMessage.userID)
  return userid_.Get(index);
}
inline void SMSMessage::set_userid(int index, ::google::protobuf::uint32 value) {
  userid_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.SMSMessage.userID)
}
inline void SMSMessage::add_userid(::google::protobuf::uint32 value) {
  userid_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.SMSMessage.userID)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SMSMessage::userid() const {
  // @@protoc_insertion_point(field_list:Messages.SMSMessage.userID)
  return userid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SMSMessage::mutable_userid() {
  // @@protoc_insertion_point(field_mutable_list:Messages.SMSMessage.userID)
  return &userid_;
}

// repeated uint32 sms = 3 [packed = true];
inline int SMSMessage::sms_size() const {
  return sms_.size();
}
inline void SMSMessage::clear_sms() {
  sms_.Clear();
}
inline ::google::protobuf::uint32 SMSMessage::sms(int index) const {
  // @@protoc_insertion_point(field_get:Messages.SMSMessage.sms)
  return sms_.Get(index);
}
inline void SMSMessage::set_sms(int index, ::google::protobuf::uint32 value) {
  sms_.Set(index, value);
  // @@protoc_insertion_point(field_set:Messages.SMSMessage.sms)
}
inline void SMSMessage::add_sms(::google::protobuf::uint32 value) {
  sms_.Add(value);
  // @@protoc_insertion_point(field_add:Messages.SMSMessage.sms)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SMSMessage::sms() const {
  // @@protoc_insertion_point(field_list:Messages.SMSMessage.sms)
  return sms_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SMSMessage::mutable_sms() {
  // @@protoc_insertion_point(field_mutable_list:Messages.SMSMessage.sms)
  return &sms_;
}

// optional uint32 size = 4;
inline bool SMSMessage::has_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SMSMessage::set_has_size() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SMSMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SMSMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 SMSMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.SMSMessage.size)
  return size_;
}
inline void SMSMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.SMSMessage.size)
}

// -------------------------------------------------------------------

// SMSResponseMessage

// required .Messages.Type type = 1;
inline bool SMSResponseMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SMSResponseMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SMSResponseMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SMSResponseMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type SMSResponseMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.SMSResponseMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void SMSResponseMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.SMSResponseMessage.type)
}

// optional uint32 size = 2;
inline bool SMSResponseMessage::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SMSResponseMessage::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SMSResponseMessage::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SMSResponseMessage::clear_size() {
  size_ = 0u;
  clear_has_size();
}
inline ::google::protobuf::uint32 SMSResponseMessage::size() const {
  // @@protoc_insertion_point(field_get:Messages.SMSResponseMessage.size)
  return size_;
}
inline void SMSResponseMessage::set_size(::google::protobuf::uint32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:Messages.SMSResponseMessage.size)
}

// required uint32 status = 3;
inline bool SMSResponseMessage::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SMSResponseMessage::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SMSResponseMessage::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SMSResponseMessage::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 SMSResponseMessage::status() const {
  // @@protoc_insertion_point(field_get:Messages.SMSResponseMessage.status)
  return status_;
}
inline void SMSResponseMessage::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:Messages.SMSResponseMessage.status)
}

// -------------------------------------------------------------------

// AllInOneMessage

// required .Messages.Type type = 1;
inline bool AllInOneMessage::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllInOneMessage::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllInOneMessage::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllInOneMessage::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::Messages::Type AllInOneMessage::type() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.type)
  return static_cast< ::Messages::Type >(type_);
}
inline void AllInOneMessage::set_type(::Messages::Type value) {
  assert(::Messages::Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:Messages.AllInOneMessage.type)
}

// optional .Messages.SecretMessage secretMsg = 2;
inline bool AllInOneMessage::has_secretmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllInOneMessage::set_has_secretmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllInOneMessage::clear_has_secretmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllInOneMessage::clear_secretmsg() {
  if (secretmsg_ != NULL) secretmsg_->::Messages::SecretMessage::Clear();
  clear_has_secretmsg();
}
inline const ::Messages::SecretMessage& AllInOneMessage::secretmsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.secretMsg)
  return secretmsg_ != NULL ? *secretmsg_ : *default_instance_->secretmsg_;
}
inline ::Messages::SecretMessage* AllInOneMessage::mutable_secretmsg() {
  set_has_secretmsg();
  if (secretmsg_ == NULL) secretmsg_ = new ::Messages::SecretMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.secretMsg)
  return secretmsg_;
}
inline ::Messages::SecretMessage* AllInOneMessage::release_secretmsg() {
  clear_has_secretmsg();
  ::Messages::SecretMessage* temp = secretmsg_;
  secretmsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_secretmsg(::Messages::SecretMessage* secretmsg) {
  delete secretmsg_;
  secretmsg_ = secretmsg;
  if (secretmsg) {
    set_has_secretmsg();
  } else {
    clear_has_secretmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.secretMsg)
}

// optional .Messages.InitialMessage initMsg = 3;
inline bool AllInOneMessage::has_initmsg() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllInOneMessage::set_has_initmsg() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllInOneMessage::clear_has_initmsg() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllInOneMessage::clear_initmsg() {
  if (initmsg_ != NULL) initmsg_->::Messages::InitialMessage::Clear();
  clear_has_initmsg();
}
inline const ::Messages::InitialMessage& AllInOneMessage::initmsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.initMsg)
  return initmsg_ != NULL ? *initmsg_ : *default_instance_->initmsg_;
}
inline ::Messages::InitialMessage* AllInOneMessage::mutable_initmsg() {
  set_has_initmsg();
  if (initmsg_ == NULL) initmsg_ = new ::Messages::InitialMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.initMsg)
  return initmsg_;
}
inline ::Messages::InitialMessage* AllInOneMessage::release_initmsg() {
  clear_has_initmsg();
  ::Messages::InitialMessage* temp = initmsg_;
  initmsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_initmsg(::Messages::InitialMessage* initmsg) {
  delete initmsg_;
  initmsg_ = initmsg;
  if (initmsg) {
    set_has_initmsg();
  } else {
    clear_has_initmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.initMsg)
}

// optional .Messages.MessageMSG0 msg0 = 4;
inline bool AllInOneMessage::has_msg0() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllInOneMessage::set_has_msg0() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllInOneMessage::clear_has_msg0() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllInOneMessage::clear_msg0() {
  if (msg0_ != NULL) msg0_->::Messages::MessageMSG0::Clear();
  clear_has_msg0();
}
inline const ::Messages::MessageMSG0& AllInOneMessage::msg0() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.msg0)
  return msg0_ != NULL ? *msg0_ : *default_instance_->msg0_;
}
inline ::Messages::MessageMSG0* AllInOneMessage::mutable_msg0() {
  set_has_msg0();
  if (msg0_ == NULL) msg0_ = new ::Messages::MessageMSG0;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.msg0)
  return msg0_;
}
inline ::Messages::MessageMSG0* AllInOneMessage::release_msg0() {
  clear_has_msg0();
  ::Messages::MessageMSG0* temp = msg0_;
  msg0_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_msg0(::Messages::MessageMSG0* msg0) {
  delete msg0_;
  msg0_ = msg0;
  if (msg0) {
    set_has_msg0();
  } else {
    clear_has_msg0();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.msg0)
}

// optional .Messages.MessageMSG1 msg1 = 5;
inline bool AllInOneMessage::has_msg1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AllInOneMessage::set_has_msg1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AllInOneMessage::clear_has_msg1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AllInOneMessage::clear_msg1() {
  if (msg1_ != NULL) msg1_->::Messages::MessageMSG1::Clear();
  clear_has_msg1();
}
inline const ::Messages::MessageMSG1& AllInOneMessage::msg1() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.msg1)
  return msg1_ != NULL ? *msg1_ : *default_instance_->msg1_;
}
inline ::Messages::MessageMSG1* AllInOneMessage::mutable_msg1() {
  set_has_msg1();
  if (msg1_ == NULL) msg1_ = new ::Messages::MessageMSG1;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.msg1)
  return msg1_;
}
inline ::Messages::MessageMSG1* AllInOneMessage::release_msg1() {
  clear_has_msg1();
  ::Messages::MessageMSG1* temp = msg1_;
  msg1_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_msg1(::Messages::MessageMSG1* msg1) {
  delete msg1_;
  msg1_ = msg1;
  if (msg1) {
    set_has_msg1();
  } else {
    clear_has_msg1();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.msg1)
}

// optional .Messages.MessageMSG2 msg2 = 6;
inline bool AllInOneMessage::has_msg2() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AllInOneMessage::set_has_msg2() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AllInOneMessage::clear_has_msg2() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AllInOneMessage::clear_msg2() {
  if (msg2_ != NULL) msg2_->::Messages::MessageMSG2::Clear();
  clear_has_msg2();
}
inline const ::Messages::MessageMSG2& AllInOneMessage::msg2() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.msg2)
  return msg2_ != NULL ? *msg2_ : *default_instance_->msg2_;
}
inline ::Messages::MessageMSG2* AllInOneMessage::mutable_msg2() {
  set_has_msg2();
  if (msg2_ == NULL) msg2_ = new ::Messages::MessageMSG2;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.msg2)
  return msg2_;
}
inline ::Messages::MessageMSG2* AllInOneMessage::release_msg2() {
  clear_has_msg2();
  ::Messages::MessageMSG2* temp = msg2_;
  msg2_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_msg2(::Messages::MessageMSG2* msg2) {
  delete msg2_;
  msg2_ = msg2;
  if (msg2) {
    set_has_msg2();
  } else {
    clear_has_msg2();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.msg2)
}

// optional .Messages.MessageMSG3 msg3 = 7;
inline bool AllInOneMessage::has_msg3() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AllInOneMessage::set_has_msg3() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AllInOneMessage::clear_has_msg3() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AllInOneMessage::clear_msg3() {
  if (msg3_ != NULL) msg3_->::Messages::MessageMSG3::Clear();
  clear_has_msg3();
}
inline const ::Messages::MessageMSG3& AllInOneMessage::msg3() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.msg3)
  return msg3_ != NULL ? *msg3_ : *default_instance_->msg3_;
}
inline ::Messages::MessageMSG3* AllInOneMessage::mutable_msg3() {
  set_has_msg3();
  if (msg3_ == NULL) msg3_ = new ::Messages::MessageMSG3;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.msg3)
  return msg3_;
}
inline ::Messages::MessageMSG3* AllInOneMessage::release_msg3() {
  clear_has_msg3();
  ::Messages::MessageMSG3* temp = msg3_;
  msg3_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_msg3(::Messages::MessageMSG3* msg3) {
  delete msg3_;
  msg3_ = msg3;
  if (msg3) {
    set_has_msg3();
  } else {
    clear_has_msg3();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.msg3)
}

// optional .Messages.AttestationMessage attestMsg = 8;
inline bool AllInOneMessage::has_attestmsg() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AllInOneMessage::set_has_attestmsg() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AllInOneMessage::clear_has_attestmsg() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AllInOneMessage::clear_attestmsg() {
  if (attestmsg_ != NULL) attestmsg_->::Messages::AttestationMessage::Clear();
  clear_has_attestmsg();
}
inline const ::Messages::AttestationMessage& AllInOneMessage::attestmsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.attestMsg)
  return attestmsg_ != NULL ? *attestmsg_ : *default_instance_->attestmsg_;
}
inline ::Messages::AttestationMessage* AllInOneMessage::mutable_attestmsg() {
  set_has_attestmsg();
  if (attestmsg_ == NULL) attestmsg_ = new ::Messages::AttestationMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.attestMsg)
  return attestmsg_;
}
inline ::Messages::AttestationMessage* AllInOneMessage::release_attestmsg() {
  clear_has_attestmsg();
  ::Messages::AttestationMessage* temp = attestmsg_;
  attestmsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_attestmsg(::Messages::AttestationMessage* attestmsg) {
  delete attestmsg_;
  attestmsg_ = attestmsg;
  if (attestmsg) {
    set_has_attestmsg();
  } else {
    clear_has_attestmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.attestMsg)
}

// optional .Messages.RegisterMessage regMsg = 9;
inline bool AllInOneMessage::has_regmsg() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AllInOneMessage::set_has_regmsg() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AllInOneMessage::clear_has_regmsg() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AllInOneMessage::clear_regmsg() {
  if (regmsg_ != NULL) regmsg_->::Messages::RegisterMessage::Clear();
  clear_has_regmsg();
}
inline const ::Messages::RegisterMessage& AllInOneMessage::regmsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.regMsg)
  return regmsg_ != NULL ? *regmsg_ : *default_instance_->regmsg_;
}
inline ::Messages::RegisterMessage* AllInOneMessage::mutable_regmsg() {
  set_has_regmsg();
  if (regmsg_ == NULL) regmsg_ = new ::Messages::RegisterMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.regMsg)
  return regmsg_;
}
inline ::Messages::RegisterMessage* AllInOneMessage::release_regmsg() {
  clear_has_regmsg();
  ::Messages::RegisterMessage* temp = regmsg_;
  regmsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_regmsg(::Messages::RegisterMessage* regmsg) {
  delete regmsg_;
  regmsg_ = regmsg;
  if (regmsg) {
    set_has_regmsg();
  } else {
    clear_has_regmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.regMsg)
}

// optional .Messages.PinCodeToMessage pincodetoMsg = 10;
inline bool AllInOneMessage::has_pincodetomsg() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AllInOneMessage::set_has_pincodetomsg() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AllInOneMessage::clear_has_pincodetomsg() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AllInOneMessage::clear_pincodetomsg() {
  if (pincodetomsg_ != NULL) pincodetomsg_->::Messages::PinCodeToMessage::Clear();
  clear_has_pincodetomsg();
}
inline const ::Messages::PinCodeToMessage& AllInOneMessage::pincodetomsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.pincodetoMsg)
  return pincodetomsg_ != NULL ? *pincodetomsg_ : *default_instance_->pincodetomsg_;
}
inline ::Messages::PinCodeToMessage* AllInOneMessage::mutable_pincodetomsg() {
  set_has_pincodetomsg();
  if (pincodetomsg_ == NULL) pincodetomsg_ = new ::Messages::PinCodeToMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.pincodetoMsg)
  return pincodetomsg_;
}
inline ::Messages::PinCodeToMessage* AllInOneMessage::release_pincodetomsg() {
  clear_has_pincodetomsg();
  ::Messages::PinCodeToMessage* temp = pincodetomsg_;
  pincodetomsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_pincodetomsg(::Messages::PinCodeToMessage* pincodetomsg) {
  delete pincodetomsg_;
  pincodetomsg_ = pincodetomsg;
  if (pincodetomsg) {
    set_has_pincodetomsg();
  } else {
    clear_has_pincodetomsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.pincodetoMsg)
}

// optional .Messages.PinCodeBackMessage pincodebackMsg = 11;
inline bool AllInOneMessage::has_pincodebackmsg() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AllInOneMessage::set_has_pincodebackmsg() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AllInOneMessage::clear_has_pincodebackmsg() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AllInOneMessage::clear_pincodebackmsg() {
  if (pincodebackmsg_ != NULL) pincodebackmsg_->::Messages::PinCodeBackMessage::Clear();
  clear_has_pincodebackmsg();
}
inline const ::Messages::PinCodeBackMessage& AllInOneMessage::pincodebackmsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.pincodebackMsg)
  return pincodebackmsg_ != NULL ? *pincodebackmsg_ : *default_instance_->pincodebackmsg_;
}
inline ::Messages::PinCodeBackMessage* AllInOneMessage::mutable_pincodebackmsg() {
  set_has_pincodebackmsg();
  if (pincodebackmsg_ == NULL) pincodebackmsg_ = new ::Messages::PinCodeBackMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.pincodebackMsg)
  return pincodebackmsg_;
}
inline ::Messages::PinCodeBackMessage* AllInOneMessage::release_pincodebackmsg() {
  clear_has_pincodebackmsg();
  ::Messages::PinCodeBackMessage* temp = pincodebackmsg_;
  pincodebackmsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_pincodebackmsg(::Messages::PinCodeBackMessage* pincodebackmsg) {
  delete pincodebackmsg_;
  pincodebackmsg_ = pincodebackmsg;
  if (pincodebackmsg) {
    set_has_pincodebackmsg();
  } else {
    clear_has_pincodebackmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.pincodebackMsg)
}

// optional .Messages.ResponseMessage resMsg = 12;
inline bool AllInOneMessage::has_resmsg() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AllInOneMessage::set_has_resmsg() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AllInOneMessage::clear_has_resmsg() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AllInOneMessage::clear_resmsg() {
  if (resmsg_ != NULL) resmsg_->::Messages::ResponseMessage::Clear();
  clear_has_resmsg();
}
inline const ::Messages::ResponseMessage& AllInOneMessage::resmsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.resMsg)
  return resmsg_ != NULL ? *resmsg_ : *default_instance_->resmsg_;
}
inline ::Messages::ResponseMessage* AllInOneMessage::mutable_resmsg() {
  set_has_resmsg();
  if (resmsg_ == NULL) resmsg_ = new ::Messages::ResponseMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.resMsg)
  return resmsg_;
}
inline ::Messages::ResponseMessage* AllInOneMessage::release_resmsg() {
  clear_has_resmsg();
  ::Messages::ResponseMessage* temp = resmsg_;
  resmsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_resmsg(::Messages::ResponseMessage* resmsg) {
  delete resmsg_;
  resmsg_ = resmsg;
  if (resmsg) {
    set_has_resmsg();
  } else {
    clear_has_resmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.resMsg)
}

// optional .Messages.SMSMessage smsMsg = 13;
inline bool AllInOneMessage::has_smsmsg() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AllInOneMessage::set_has_smsmsg() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AllInOneMessage::clear_has_smsmsg() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AllInOneMessage::clear_smsmsg() {
  if (smsmsg_ != NULL) smsmsg_->::Messages::SMSMessage::Clear();
  clear_has_smsmsg();
}
inline const ::Messages::SMSMessage& AllInOneMessage::smsmsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.smsMsg)
  return smsmsg_ != NULL ? *smsmsg_ : *default_instance_->smsmsg_;
}
inline ::Messages::SMSMessage* AllInOneMessage::mutable_smsmsg() {
  set_has_smsmsg();
  if (smsmsg_ == NULL) smsmsg_ = new ::Messages::SMSMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.smsMsg)
  return smsmsg_;
}
inline ::Messages::SMSMessage* AllInOneMessage::release_smsmsg() {
  clear_has_smsmsg();
  ::Messages::SMSMessage* temp = smsmsg_;
  smsmsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_smsmsg(::Messages::SMSMessage* smsmsg) {
  delete smsmsg_;
  smsmsg_ = smsmsg;
  if (smsmsg) {
    set_has_smsmsg();
  } else {
    clear_has_smsmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.smsMsg)
}

// optional .Messages.SMSResponseMessage smsresMsg = 14;
inline bool AllInOneMessage::has_smsresmsg() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AllInOneMessage::set_has_smsresmsg() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AllInOneMessage::clear_has_smsresmsg() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AllInOneMessage::clear_smsresmsg() {
  if (smsresmsg_ != NULL) smsresmsg_->::Messages::SMSResponseMessage::Clear();
  clear_has_smsresmsg();
}
inline const ::Messages::SMSResponseMessage& AllInOneMessage::smsresmsg() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.smsresMsg)
  return smsresmsg_ != NULL ? *smsresmsg_ : *default_instance_->smsresmsg_;
}
inline ::Messages::SMSResponseMessage* AllInOneMessage::mutable_smsresmsg() {
  set_has_smsresmsg();
  if (smsresmsg_ == NULL) smsresmsg_ = new ::Messages::SMSResponseMessage;
  // @@protoc_insertion_point(field_mutable:Messages.AllInOneMessage.smsresMsg)
  return smsresmsg_;
}
inline ::Messages::SMSResponseMessage* AllInOneMessage::release_smsresmsg() {
  clear_has_smsresmsg();
  ::Messages::SMSResponseMessage* temp = smsresmsg_;
  smsresmsg_ = NULL;
  return temp;
}
inline void AllInOneMessage::set_allocated_smsresmsg(::Messages::SMSResponseMessage* smsresmsg) {
  delete smsresmsg_;
  smsresmsg_ = smsresmsg;
  if (smsresmsg) {
    set_has_smsresmsg();
  } else {
    clear_has_smsresmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:Messages.AllInOneMessage.smsresMsg)
}

// required uint32 sessionID = 15;
inline bool AllInOneMessage::has_sessionid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AllInOneMessage::set_has_sessionid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AllInOneMessage::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AllInOneMessage::clear_sessionid() {
  sessionid_ = 0u;
  clear_has_sessionid();
}
inline ::google::protobuf::uint32 AllInOneMessage::sessionid() const {
  // @@protoc_insertion_point(field_get:Messages.AllInOneMessage.sessionID)
  return sessionid_;
}
inline void AllInOneMessage::set_sessionid(::google::protobuf::uint32 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:Messages.AllInOneMessage.sessionID)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Messages::Type> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Messages::Type>() {
  return ::Messages::Type_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Messages_2eproto__INCLUDED
