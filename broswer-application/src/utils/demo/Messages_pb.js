/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Messages.AllInOneMessage', null, global);
goog.exportSymbol('proto.Messages.AttestationMessage', null, global);
goog.exportSymbol('proto.Messages.InitialMessage', null, global);
goog.exportSymbol('proto.Messages.MessageMSG0', null, global);
goog.exportSymbol('proto.Messages.MessageMSG1', null, global);
goog.exportSymbol('proto.Messages.MessageMSG2', null, global);
goog.exportSymbol('proto.Messages.MessageMSG3', null, global);
goog.exportSymbol('proto.Messages.SecretMessage', null, global);
goog.exportSymbol('proto.Messages.Type', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.SecretMessage = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.SecretMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.SecretMessage.displayName = 'proto.Messages.SecretMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Messages.SecretMessage.prototype.toObject = function (opt_includeInstance) {
    return proto.Messages.SecretMessage.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Messages.SecretMessage} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Messages.SecretMessage.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getField(msg, 1),
      size: jspb.Message.getField(msg, 2)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.SecretMessage}
 */
proto.Messages.SecretMessage.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.SecretMessage;
  return proto.Messages.SecretMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.SecretMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.SecretMessage}
 */
proto.Messages.SecretMessage.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Messages.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSize(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.SecretMessage.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Messages.SecretMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.SecretMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.SecretMessage.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.Messages.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * required Type type = 1;
 * @return {!proto.Messages.Type}
 */
proto.Messages.SecretMessage.prototype.getType = function () {
  return /** @type {!proto.Messages.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Messages.Type} value */
proto.Messages.SecretMessage.prototype.setType = function (value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.SecretMessage.prototype.clearType = function () {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.SecretMessage.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.Messages.SecretMessage.prototype.getSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.SecretMessage.prototype.setSize = function (value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.SecretMessage.prototype.clearSize = function () {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.SecretMessage.prototype.hasSize = function () {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.InitialMessage = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.InitialMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.InitialMessage.displayName = 'proto.Messages.InitialMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Messages.InitialMessage.prototype.toObject = function (opt_includeInstance) {
    return proto.Messages.InitialMessage.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Messages.InitialMessage} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Messages.InitialMessage.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getField(msg, 1),
      size: jspb.Message.getField(msg, 2)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.InitialMessage}
 */
proto.Messages.InitialMessage.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.InitialMessage;
  return proto.Messages.InitialMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.InitialMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.InitialMessage}
 */
proto.Messages.InitialMessage.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Messages.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSize(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.InitialMessage.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Messages.InitialMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.InitialMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.InitialMessage.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.Messages.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * required Type type = 1;
 * @return {!proto.Messages.Type}
 */
proto.Messages.InitialMessage.prototype.getType = function () {
  return /** @type {!proto.Messages.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Messages.Type} value */
proto.Messages.InitialMessage.prototype.setType = function (value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.InitialMessage.prototype.clearType = function () {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.InitialMessage.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.Messages.InitialMessage.prototype.getSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.InitialMessage.prototype.setSize = function (value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.InitialMessage.prototype.clearSize = function () {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.InitialMessage.prototype.hasSize = function () {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MessageMSG0 = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.MessageMSG0, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.MessageMSG0.displayName = 'proto.Messages.MessageMSG0';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Messages.MessageMSG0.prototype.toObject = function (opt_includeInstance) {
    return proto.Messages.MessageMSG0.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Messages.MessageMSG0} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Messages.MessageMSG0.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getField(msg, 1),
      epid: jspb.Message.getField(msg, 2),
      status: jspb.Message.getField(msg, 3)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MessageMSG0}
 */
proto.Messages.MessageMSG0.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MessageMSG0;
  return proto.Messages.MessageMSG0.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MessageMSG0} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MessageMSG0}
 */
proto.Messages.MessageMSG0.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Messages.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setEpid(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setStatus(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MessageMSG0.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MessageMSG0.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MessageMSG0} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG0.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.Messages.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * required Type type = 1;
 * @return {!proto.Messages.Type}
 */
proto.Messages.MessageMSG0.prototype.getType = function () {
  return /** @type {!proto.Messages.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Messages.Type} value */
proto.Messages.MessageMSG0.prototype.setType = function (value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.MessageMSG0.prototype.clearType = function () {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG0.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required uint32 epid = 2;
 * @return {number}
 */
proto.Messages.MessageMSG0.prototype.getEpid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG0.prototype.setEpid = function (value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.MessageMSG0.prototype.clearEpid = function () {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG0.prototype.hasEpid = function () {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 status = 3;
 * @return {number}
 */
proto.Messages.MessageMSG0.prototype.getStatus = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG0.prototype.setStatus = function (value) {
  jspb.Message.setField(this, 3, value);
};


proto.Messages.MessageMSG0.prototype.clearStatus = function () {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG0.prototype.hasStatus = function () {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MessageMSG1 = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.MessageMSG1.repeatedFields_, null);
};
goog.inherits(proto.Messages.MessageMSG1, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.MessageMSG1.displayName = 'proto.Messages.MessageMSG1';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.MessageMSG1.repeatedFields_ = [2, 3, 4];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Messages.MessageMSG1.prototype.toObject = function (opt_includeInstance) {
    return proto.Messages.MessageMSG1.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Messages.MessageMSG1} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Messages.MessageMSG1.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getField(msg, 1),
      gaxList: jspb.Message.getRepeatedField(msg, 2),
      gayList: jspb.Message.getRepeatedField(msg, 3),
      gidList: jspb.Message.getRepeatedField(msg, 4)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MessageMSG1}
 */
proto.Messages.MessageMSG1.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MessageMSG1;
  return proto.Messages.MessageMSG1.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MessageMSG1} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MessageMSG1}
 */
proto.Messages.MessageMSG1.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Messages.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setGaxList(value);
        break;
      case 3:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setGayList(value);
        break;
      case 4:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setGidList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MessageMSG1.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MessageMSG1.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MessageMSG1} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG1.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.Messages.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getGaxList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
  f = message.getGayList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getGidList();
  if (f.length > 0) {
    writer.writePackedUint32(
      4,
      f
    );
  }
};


/**
 * required Type type = 1;
 * @return {!proto.Messages.Type}
 */
proto.Messages.MessageMSG1.prototype.getType = function () {
  return /** @type {!proto.Messages.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Messages.Type} value */
proto.Messages.MessageMSG1.prototype.setType = function (value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.MessageMSG1.prototype.clearType = function () {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG1.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated uint32 GaX = 2;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG1.prototype.getGaxList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG1.prototype.setGaxList = function (value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG1.prototype.addGax = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.Messages.MessageMSG1.prototype.clearGaxList = function () {
  this.setGaxList([]);
};


/**
 * repeated uint32 GaY = 3;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG1.prototype.getGayList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG1.prototype.setGayList = function (value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG1.prototype.addGay = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.Messages.MessageMSG1.prototype.clearGayList = function () {
  this.setGayList([]);
};


/**
 * repeated uint32 GID = 4;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG1.prototype.getGidList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG1.prototype.setGidList = function (value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG1.prototype.addGid = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.Messages.MessageMSG1.prototype.clearGidList = function () {
  this.setGidList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MessageMSG2 = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.MessageMSG2.repeatedFields_, null);
};
goog.inherits(proto.Messages.MessageMSG2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.MessageMSG2.displayName = 'proto.Messages.MessageMSG2';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.MessageMSG2.repeatedFields_ = [3, 4, 6, 8, 9, 10, 12];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Messages.MessageMSG2.prototype.toObject = function (opt_includeInstance) {
    return proto.Messages.MessageMSG2.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Messages.MessageMSG2} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Messages.MessageMSG2.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getField(msg, 1),
      size: jspb.Message.getField(msg, 2),
      publickeygxList: jspb.Message.getRepeatedField(msg, 3),
      publickeygyList: jspb.Message.getRepeatedField(msg, 4),
      quotetype: jspb.Message.getField(msg, 5),
      spidList: jspb.Message.getRepeatedField(msg, 6),
      cmackdfid: jspb.Message.getField(msg, 7),
      signaturexList: jspb.Message.getRepeatedField(msg, 8),
      signatureyList: jspb.Message.getRepeatedField(msg, 9),
      smacList: jspb.Message.getRepeatedField(msg, 10),
      sizesigrl: jspb.Message.getField(msg, 11),
      sigrlList: jspb.Message.getRepeatedField(msg, 12)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MessageMSG2}
 */
proto.Messages.MessageMSG2.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MessageMSG2;
  return proto.Messages.MessageMSG2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MessageMSG2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MessageMSG2}
 */
proto.Messages.MessageMSG2.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Messages.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSize(value);
        break;
      case 3:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setPublickeygxList(value);
        break;
      case 4:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setPublickeygyList(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setQuotetype(value);
        break;
      case 6:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setSpidList(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setCmackdfid(value);
        break;
      case 8:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setSignaturexList(value);
        break;
      case 9:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setSignatureyList(value);
        break;
      case 10:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setSmacList(value);
        break;
      case 11:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSizesigrl(value);
        break;
      case 12:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setSigrlList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MessageMSG2.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MessageMSG2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MessageMSG2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG2.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.Messages.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPublickeygxList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getPublickeygyList();
  if (f.length > 0) {
    writer.writePackedUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSpidList();
  if (f.length > 0) {
    writer.writePackedUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getSignaturexList();
  if (f.length > 0) {
    writer.writePackedUint32(
      8,
      f
    );
  }
  f = message.getSignatureyList();
  if (f.length > 0) {
    writer.writePackedUint32(
      9,
      f
    );
  }
  f = message.getSmacList();
  if (f.length > 0) {
    writer.writePackedUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getSigrlList();
  if (f.length > 0) {
    writer.writePackedUint32(
      12,
      f
    );
  }
};


/**
 * required Type type = 1;
 * @return {!proto.Messages.Type}
 */
proto.Messages.MessageMSG2.prototype.getType = function () {
  return /** @type {!proto.Messages.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Messages.Type} value */
proto.Messages.MessageMSG2.prototype.setType = function (value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.MessageMSG2.prototype.clearType = function () {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setSize = function (value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.MessageMSG2.prototype.clearSize = function () {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasSize = function () {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated uint32 publicKeyGx = 3;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getPublickeygxList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setPublickeygxList = function (value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addPublickeygx = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearPublickeygxList = function () {
  this.setPublickeygxList([]);
};


/**
 * repeated uint32 publicKeyGy = 4;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getPublickeygyList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setPublickeygyList = function (value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addPublickeygy = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearPublickeygyList = function () {
  this.setPublickeygyList([]);
};


/**
 * optional uint32 quoteType = 5;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getQuotetype = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setQuotetype = function (value) {
  jspb.Message.setField(this, 5, value);
};


proto.Messages.MessageMSG2.prototype.clearQuotetype = function () {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasQuotetype = function () {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated uint32 spid = 6;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSpidList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSpidList = function (value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSpid = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSpidList = function () {
  this.setSpidList([]);
};


/**
 * optional uint32 cmacKdfId = 7;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getCmackdfid = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setCmackdfid = function (value) {
  jspb.Message.setField(this, 7, value);
};


proto.Messages.MessageMSG2.prototype.clearCmackdfid = function () {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasCmackdfid = function () {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated uint32 signatureX = 8;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSignaturexList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSignaturexList = function (value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSignaturex = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSignaturexList = function () {
  this.setSignaturexList([]);
};


/**
 * repeated uint32 signatureY = 9;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSignatureyList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSignatureyList = function (value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSignaturey = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSignatureyList = function () {
  this.setSignatureyList([]);
};


/**
 * repeated uint32 smac = 10;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSmacList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSmacList = function (value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSmac = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSmacList = function () {
  this.setSmacList([]);
};


/**
 * optional uint32 sizeSigrl = 11;
 * @return {number}
 */
proto.Messages.MessageMSG2.prototype.getSizesigrl = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG2.prototype.setSizesigrl = function (value) {
  jspb.Message.setField(this, 11, value);
};


proto.Messages.MessageMSG2.prototype.clearSizesigrl = function () {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG2.prototype.hasSizesigrl = function () {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated uint32 sigrl = 12;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG2.prototype.getSigrlList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG2.prototype.setSigrlList = function (value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG2.prototype.addSigrl = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.Messages.MessageMSG2.prototype.clearSigrlList = function () {
  this.setSigrlList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.MessageMSG3 = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.MessageMSG3.repeatedFields_, null);
};
goog.inherits(proto.Messages.MessageMSG3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.MessageMSG3.displayName = 'proto.Messages.MessageMSG3';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.MessageMSG3.repeatedFields_ = [3, 4, 5, 6, 7];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Messages.MessageMSG3.prototype.toObject = function (opt_includeInstance) {
    return proto.Messages.MessageMSG3.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Messages.MessageMSG3} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Messages.MessageMSG3.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getField(msg, 1),
      size: jspb.Message.getField(msg, 2),
      sgxmacList: jspb.Message.getRepeatedField(msg, 3),
      gaxmsg3List: jspb.Message.getRepeatedField(msg, 4),
      gaymsg3List: jspb.Message.getRepeatedField(msg, 5),
      secpropertyList: jspb.Message.getRepeatedField(msg, 6),
      quoteList: jspb.Message.getRepeatedField(msg, 7)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.MessageMSG3}
 */
proto.Messages.MessageMSG3.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.MessageMSG3;
  return proto.Messages.MessageMSG3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.MessageMSG3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.MessageMSG3}
 */
proto.Messages.MessageMSG3.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Messages.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSize(value);
        break;
      case 3:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setSgxmacList(value);
        break;
      case 4:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setGaxmsg3List(value);
        break;
      case 5:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setGaymsg3List(value);
        break;
      case 6:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setSecpropertyList(value);
        break;
      case 7:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setQuoteList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.MessageMSG3.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Messages.MessageMSG3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.MessageMSG3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.MessageMSG3.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.Messages.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSgxmacList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getGaxmsg3List();
  if (f.length > 0) {
    writer.writePackedUint32(
      4,
      f
    );
  }
  f = message.getGaymsg3List();
  if (f.length > 0) {
    writer.writePackedUint32(
      5,
      f
    );
  }
  f = message.getSecpropertyList();
  if (f.length > 0) {
    writer.writePackedUint32(
      6,
      f
    );
  }
  f = message.getQuoteList();
  if (f.length > 0) {
    writer.writePackedUint32(
      7,
      f
    );
  }
};


/**
 * required Type type = 1;
 * @return {!proto.Messages.Type}
 */
proto.Messages.MessageMSG3.prototype.getType = function () {
  return /** @type {!proto.Messages.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Messages.Type} value */
proto.Messages.MessageMSG3.prototype.setType = function (value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.MessageMSG3.prototype.clearType = function () {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG3.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.Messages.MessageMSG3.prototype.getSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.MessageMSG3.prototype.setSize = function (value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.MessageMSG3.prototype.clearSize = function () {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.MessageMSG3.prototype.hasSize = function () {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated uint32 sgxMac = 3;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getSgxmacList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setSgxmacList = function (value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addSgxmac = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearSgxmacList = function () {
  this.setSgxmacList([]);
};


/**
 * repeated uint32 gaxMsg3 = 4;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getGaxmsg3List = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setGaxmsg3List = function (value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addGaxmsg3 = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearGaxmsg3List = function () {
  this.setGaxmsg3List([]);
};


/**
 * repeated uint32 gayMsg3 = 5;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getGaymsg3List = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setGaymsg3List = function (value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addGaymsg3 = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearGaymsg3List = function () {
  this.setGaymsg3List([]);
};


/**
 * repeated uint32 secProperty = 6;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getSecpropertyList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setSecpropertyList = function (value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addSecproperty = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearSecpropertyList = function () {
  this.setSecpropertyList([]);
};


/**
 * repeated uint32 quote = 7;
 * @return {!Array<number>}
 */
proto.Messages.MessageMSG3.prototype.getQuoteList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<number>} value */
proto.Messages.MessageMSG3.prototype.setQuoteList = function (value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.MessageMSG3.prototype.addQuote = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.Messages.MessageMSG3.prototype.clearQuoteList = function () {
  this.setQuoteList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.AttestationMessage = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Messages.AttestationMessage.repeatedFields_, null);
};
goog.inherits(proto.Messages.AttestationMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.AttestationMessage.displayName = 'proto.Messages.AttestationMessage';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Messages.AttestationMessage.repeatedFields_ = [6, 7, 8, 9, 10, 11, 12, 14, 15, 16];



if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Messages.AttestationMessage.prototype.toObject = function (opt_includeInstance) {
    return proto.Messages.AttestationMessage.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Messages.AttestationMessage} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Messages.AttestationMessage.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getField(msg, 1),
      size: jspb.Message.getField(msg, 2),
      epidgroupstatus: jspb.Message.getField(msg, 3),
      tcbevaluationstatus: jspb.Message.getField(msg, 4),
      pseevaluationstatus: jspb.Message.getField(msg, 5),
      latestequivalenttcbpsvnList: jspb.Message.getRepeatedField(msg, 6),
      latestpseisvsvnList: jspb.Message.getRepeatedField(msg, 7),
      latestpsdasvnList: jspb.Message.getRepeatedField(msg, 8),
      performancerekeygidList: jspb.Message.getRepeatedField(msg, 9),
      ecsign256xList: jspb.Message.getRepeatedField(msg, 10),
      ecsign256yList: jspb.Message.getRepeatedField(msg, 11),
      macsmkList: jspb.Message.getRepeatedField(msg, 12),
      resultsize: jspb.Message.getField(msg, 13),
      reservedList: jspb.Message.getRepeatedField(msg, 14),
      payloadtagList: jspb.Message.getRepeatedField(msg, 15),
      payloadList: jspb.Message.getRepeatedField(msg, 16)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.AttestationMessage}
 */
proto.Messages.AttestationMessage.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.AttestationMessage;
  return proto.Messages.AttestationMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.AttestationMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.AttestationMessage}
 */
proto.Messages.AttestationMessage.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Messages.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSize(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setEpidgroupstatus(value);
        break;
      case 4:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setTcbevaluationstatus(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setPseevaluationstatus(value);
        break;
      case 6:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setLatestequivalenttcbpsvnList(value);
        break;
      case 7:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setLatestpseisvsvnList(value);
        break;
      case 8:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setLatestpsdasvnList(value);
        break;
      case 9:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setPerformancerekeygidList(value);
        break;
      case 10:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setEcsign256xList(value);
        break;
      case 11:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setEcsign256yList(value);
        break;
      case 12:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setMacsmkList(value);
        break;
      case 13:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setResultsize(value);
        break;
      case 14:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setReservedList(value);
        break;
      case 15:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setPayloadtagList(value);
        break;
      case 16:
        var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
        msg.setPayloadList(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.AttestationMessage.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Messages.AttestationMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.AttestationMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.AttestationMessage.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.Messages.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getLatestequivalenttcbpsvnList();
  if (f.length > 0) {
    writer.writePackedUint32(
      6,
      f
    );
  }
  f = message.getLatestpseisvsvnList();
  if (f.length > 0) {
    writer.writePackedUint32(
      7,
      f
    );
  }
  f = message.getLatestpsdasvnList();
  if (f.length > 0) {
    writer.writePackedUint32(
      8,
      f
    );
  }
  f = message.getPerformancerekeygidList();
  if (f.length > 0) {
    writer.writePackedUint32(
      9,
      f
    );
  }
  f = message.getEcsign256xList();
  if (f.length > 0) {
    writer.writePackedUint32(
      10,
      f
    );
  }
  f = message.getEcsign256yList();
  if (f.length > 0) {
    writer.writePackedUint32(
      11,
      f
    );
  }
  f = message.getMacsmkList();
  if (f.length > 0) {
    writer.writePackedUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getReservedList();
  if (f.length > 0) {
    writer.writePackedUint32(
      14,
      f
    );
  }
  f = message.getPayloadtagList();
  if (f.length > 0) {
    writer.writePackedUint32(
      15,
      f
    );
  }
  f = message.getPayloadList();
  if (f.length > 0) {
    writer.writePackedUint32(
      16,
      f
    );
  }
};


/**
 * required Type type = 1;
 * @return {!proto.Messages.Type}
 */
proto.Messages.AttestationMessage.prototype.getType = function () {
  return /** @type {!proto.Messages.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Messages.Type} value */
proto.Messages.AttestationMessage.prototype.setType = function (value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.AttestationMessage.prototype.clearType = function () {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required uint32 size = 2;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getSize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setSize = function (value) {
  jspb.Message.setField(this, 2, value);
};


proto.Messages.AttestationMessage.prototype.clearSize = function () {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasSize = function () {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 epidGroupStatus = 3;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getEpidgroupstatus = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setEpidgroupstatus = function (value) {
  jspb.Message.setField(this, 3, value);
};


proto.Messages.AttestationMessage.prototype.clearEpidgroupstatus = function () {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasEpidgroupstatus = function () {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 tcbEvaluationStatus = 4;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getTcbevaluationstatus = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setTcbevaluationstatus = function (value) {
  jspb.Message.setField(this, 4, value);
};


proto.Messages.AttestationMessage.prototype.clearTcbevaluationstatus = function () {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasTcbevaluationstatus = function () {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 pseEvaluationStatus = 5;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getPseevaluationstatus = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setPseevaluationstatus = function (value) {
  jspb.Message.setField(this, 5, value);
};


proto.Messages.AttestationMessage.prototype.clearPseevaluationstatus = function () {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasPseevaluationstatus = function () {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated uint32 latestEquivalentTcbPsvn = 6;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getLatestequivalenttcbpsvnList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setLatestequivalenttcbpsvnList = function (value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addLatestequivalenttcbpsvn = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearLatestequivalenttcbpsvnList = function () {
  this.setLatestequivalenttcbpsvnList([]);
};


/**
 * repeated uint32 latestPseIsvsvn = 7;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getLatestpseisvsvnList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setLatestpseisvsvnList = function (value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addLatestpseisvsvn = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearLatestpseisvsvnList = function () {
  this.setLatestpseisvsvnList([]);
};


/**
 * repeated uint32 latestPsdaSvn = 8;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getLatestpsdasvnList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setLatestpsdasvnList = function (value) {
  jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addLatestpsdasvn = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearLatestpsdasvnList = function () {
  this.setLatestpsdasvnList([]);
};


/**
 * repeated uint32 performanceRekeyGid = 9;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getPerformancerekeygidList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setPerformancerekeygidList = function (value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addPerformancerekeygid = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearPerformancerekeygidList = function () {
  this.setPerformancerekeygidList([]);
};


/**
 * repeated uint32 ecSign256X = 10;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getEcsign256xList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setEcsign256xList = function (value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addEcsign256x = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearEcsign256xList = function () {
  this.setEcsign256xList([]);
};


/**
 * repeated uint32 ecSign256Y = 11;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getEcsign256yList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setEcsign256yList = function (value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addEcsign256y = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearEcsign256yList = function () {
  this.setEcsign256yList([]);
};


/**
 * repeated uint32 macSmk = 12;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getMacsmkList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 12));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setMacsmkList = function (value) {
  jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addMacsmk = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearMacsmkList = function () {
  this.setMacsmkList([]);
};


/**
 * optional uint32 resultSize = 13;
 * @return {number}
 */
proto.Messages.AttestationMessage.prototype.getResultsize = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.Messages.AttestationMessage.prototype.setResultsize = function (value) {
  jspb.Message.setField(this, 13, value);
};


proto.Messages.AttestationMessage.prototype.clearResultsize = function () {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AttestationMessage.prototype.hasResultsize = function () {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * repeated uint32 reserved = 14;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getReservedList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 14));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setReservedList = function (value) {
  jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addReserved = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearReservedList = function () {
  this.setReservedList([]);
};


/**
 * repeated uint32 payloadTag = 15;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getPayloadtagList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 15));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setPayloadtagList = function (value) {
  jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addPayloadtag = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearPayloadtagList = function () {
  this.setPayloadtagList([]);
};


/**
 * repeated uint32 payload = 16;
 * @return {!Array<number>}
 */
proto.Messages.AttestationMessage.prototype.getPayloadList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 16));
};


/** @param {!Array<number>} value */
proto.Messages.AttestationMessage.prototype.setPayloadList = function (value) {
  jspb.Message.setField(this, 16, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.Messages.AttestationMessage.prototype.addPayload = function (value, opt_index) {
  jspb.Message.addToRepeatedField(this, 16, value, opt_index);
};


proto.Messages.AttestationMessage.prototype.clearPayloadList = function () {
  this.setPayloadList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Messages.AllInOneMessage = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Messages.AllInOneMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Messages.AllInOneMessage.displayName = 'proto.Messages.AllInOneMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto suitable for use in Soy templates.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
   * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
   *     for transitional soy proto support: http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.Messages.AllInOneMessage.prototype.toObject = function (opt_includeInstance) {
    return proto.Messages.AllInOneMessage.toObject(opt_includeInstance, this);
  };


  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Whether to include the JSPB
   *     instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.Messages.AllInOneMessage} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.Messages.AllInOneMessage.toObject = function (includeInstance, msg) {
    var f, obj = {
      type: jspb.Message.getField(msg, 1),
      secretmsg: (f = msg.getSecretmsg()) && proto.Messages.SecretMessage.toObject(includeInstance, f),
      initmsg: (f = msg.getInitmsg()) && proto.Messages.InitialMessage.toObject(includeInstance, f),
      msg0: (f = msg.getMsg0()) && proto.Messages.MessageMSG0.toObject(includeInstance, f),
      msg1: (f = msg.getMsg1()) && proto.Messages.MessageMSG1.toObject(includeInstance, f),
      msg2: (f = msg.getMsg2()) && proto.Messages.MessageMSG2.toObject(includeInstance, f),
      msg3: (f = msg.getMsg3()) && proto.Messages.MessageMSG3.toObject(includeInstance, f),
      attestmsg: (f = msg.getAttestmsg()) && proto.Messages.AttestationMessage.toObject(includeInstance, f)
    };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Messages.AllInOneMessage}
 */
proto.Messages.AllInOneMessage.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Messages.AllInOneMessage;
  return proto.Messages.AllInOneMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Messages.AllInOneMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Messages.AllInOneMessage}
 */
proto.Messages.AllInOneMessage.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {!proto.Messages.Type} */ (reader.readEnum());
        msg.setType(value);
        break;
      case 2:
        var value = new proto.Messages.SecretMessage;
        reader.readMessage(value, proto.Messages.SecretMessage.deserializeBinaryFromReader);
        msg.setSecretmsg(value);
        break;
      case 3:
        var value = new proto.Messages.InitialMessage;
        reader.readMessage(value, proto.Messages.InitialMessage.deserializeBinaryFromReader);
        msg.setInitmsg(value);
        break;
      case 4:
        var value = new proto.Messages.MessageMSG0;
        reader.readMessage(value, proto.Messages.MessageMSG0.deserializeBinaryFromReader);
        msg.setMsg0(value);
        break;
      case 5:
        var value = new proto.Messages.MessageMSG1;
        reader.readMessage(value, proto.Messages.MessageMSG1.deserializeBinaryFromReader);
        msg.setMsg1(value);
        break;
      case 6:
        var value = new proto.Messages.MessageMSG2;
        reader.readMessage(value, proto.Messages.MessageMSG2.deserializeBinaryFromReader);
        msg.setMsg2(value);
        break;
      case 7:
        var value = new proto.Messages.MessageMSG3;
        reader.readMessage(value, proto.Messages.MessageMSG3.deserializeBinaryFromReader);
        msg.setMsg3(value);
        break;
      case 8:
        var value = new proto.Messages.AttestationMessage;
        reader.readMessage(value, proto.Messages.AttestationMessage.deserializeBinaryFromReader);
        msg.setAttestmsg(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Messages.AllInOneMessage.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.Messages.AllInOneMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Messages.AllInOneMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Messages.AllInOneMessage.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = /** @type {!proto.Messages.Type} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSecretmsg();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Messages.SecretMessage.serializeBinaryToWriter
    );
  }
  f = message.getInitmsg();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Messages.InitialMessage.serializeBinaryToWriter
    );
  }
  f = message.getMsg0();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.Messages.MessageMSG0.serializeBinaryToWriter
    );
  }
  f = message.getMsg1();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.Messages.MessageMSG1.serializeBinaryToWriter
    );
  }
  f = message.getMsg2();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.Messages.MessageMSG2.serializeBinaryToWriter
    );
  }
  f = message.getMsg3();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.Messages.MessageMSG3.serializeBinaryToWriter
    );
  }
  f = message.getAttestmsg();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.Messages.AttestationMessage.serializeBinaryToWriter
    );
  }
};


/**
 * required Type type = 1;
 * @return {!proto.Messages.Type}
 */
proto.Messages.AllInOneMessage.prototype.getType = function () {
  return /** @type {!proto.Messages.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.Messages.Type} value */
proto.Messages.AllInOneMessage.prototype.setType = function (value) {
  jspb.Message.setField(this, 1, value);
};


proto.Messages.AllInOneMessage.prototype.clearType = function () {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AllInOneMessage.prototype.hasType = function () {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SecretMessage secretMsg = 2;
 * @return {?proto.Messages.SecretMessage}
 */
proto.Messages.AllInOneMessage.prototype.getSecretmsg = function () {
  return /** @type{?proto.Messages.SecretMessage} */ (
    jspb.Message.getWrapperField(this, proto.Messages.SecretMessage, 2));
};


/** @param {?proto.Messages.SecretMessage|undefined} value */
proto.Messages.AllInOneMessage.prototype.setSecretmsg = function (value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.Messages.AllInOneMessage.prototype.clearSecretmsg = function () {
  this.setSecretmsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AllInOneMessage.prototype.hasSecretmsg = function () {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InitialMessage initMsg = 3;
 * @return {?proto.Messages.InitialMessage}
 */
proto.Messages.AllInOneMessage.prototype.getInitmsg = function () {
  return /** @type{?proto.Messages.InitialMessage} */ (
    jspb.Message.getWrapperField(this, proto.Messages.InitialMessage, 3));
};


/** @param {?proto.Messages.InitialMessage|undefined} value */
proto.Messages.AllInOneMessage.prototype.setInitmsg = function (value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.Messages.AllInOneMessage.prototype.clearInitmsg = function () {
  this.setInitmsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AllInOneMessage.prototype.hasInitmsg = function () {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional MessageMSG0 msg0 = 4;
 * @return {?proto.Messages.MessageMSG0}
 */
proto.Messages.AllInOneMessage.prototype.getMsg0 = function () {
  return /** @type{?proto.Messages.MessageMSG0} */ (
    jspb.Message.getWrapperField(this, proto.Messages.MessageMSG0, 4));
};


/** @param {?proto.Messages.MessageMSG0|undefined} value */
proto.Messages.AllInOneMessage.prototype.setMsg0 = function (value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.Messages.AllInOneMessage.prototype.clearMsg0 = function () {
  this.setMsg0(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AllInOneMessage.prototype.hasMsg0 = function () {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional MessageMSG1 msg1 = 5;
 * @return {?proto.Messages.MessageMSG1}
 */
proto.Messages.AllInOneMessage.prototype.getMsg1 = function () {
  return /** @type{?proto.Messages.MessageMSG1} */ (
    jspb.Message.getWrapperField(this, proto.Messages.MessageMSG1, 5));
};


/** @param {?proto.Messages.MessageMSG1|undefined} value */
proto.Messages.AllInOneMessage.prototype.setMsg1 = function (value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.Messages.AllInOneMessage.prototype.clearMsg1 = function () {
  this.setMsg1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AllInOneMessage.prototype.hasMsg1 = function () {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional MessageMSG2 msg2 = 6;
 * @return {?proto.Messages.MessageMSG2}
 */
proto.Messages.AllInOneMessage.prototype.getMsg2 = function () {
  return /** @type{?proto.Messages.MessageMSG2} */ (
    jspb.Message.getWrapperField(this, proto.Messages.MessageMSG2, 6));
};


/** @param {?proto.Messages.MessageMSG2|undefined} value */
proto.Messages.AllInOneMessage.prototype.setMsg2 = function (value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.Messages.AllInOneMessage.prototype.clearMsg2 = function () {
  this.setMsg2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AllInOneMessage.prototype.hasMsg2 = function () {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional MessageMSG3 msg3 = 7;
 * @return {?proto.Messages.MessageMSG3}
 */
proto.Messages.AllInOneMessage.prototype.getMsg3 = function () {
  return /** @type{?proto.Messages.MessageMSG3} */ (
    jspb.Message.getWrapperField(this, proto.Messages.MessageMSG3, 7));
};


/** @param {?proto.Messages.MessageMSG3|undefined} value */
proto.Messages.AllInOneMessage.prototype.setMsg3 = function (value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.Messages.AllInOneMessage.prototype.clearMsg3 = function () {
  this.setMsg3(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AllInOneMessage.prototype.hasMsg3 = function () {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional AttestationMessage attestMsg = 8;
 * @return {?proto.Messages.AttestationMessage}
 */
proto.Messages.AllInOneMessage.prototype.getAttestmsg = function () {
  return /** @type{?proto.Messages.AttestationMessage} */ (
    jspb.Message.getWrapperField(this, proto.Messages.AttestationMessage, 8));
};


/** @param {?proto.Messages.AttestationMessage|undefined} value */
proto.Messages.AllInOneMessage.prototype.setAttestmsg = function (value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.Messages.AllInOneMessage.prototype.clearAttestmsg = function () {
  this.setAttestmsg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Messages.AllInOneMessage.prototype.hasAttestmsg = function () {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * @enum {number}
 */
proto.Messages.Type = {
  RA_MSG0: 0,
  RA_MSG1: 1,
  RA_MSG2: 2,
  RA_MSG3: 3,
  RA_ATT_RESULT: 4,
  RA_VERIFICATION: 5,
  RA_APP_ATT_OK: 6
};

goog.object.extend(exports, proto.Messages);
